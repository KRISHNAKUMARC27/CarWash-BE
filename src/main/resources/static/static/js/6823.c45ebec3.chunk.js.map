{"version":3,"file":"static/js/6823.c45ebec3.chunk.js","mappings":"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","sources":["views/attendance/AttendanceReports.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { getRequest } from 'utils/fetchRequest';\r\nimport { Tabs, Tab, Typography, Grid, Button } from '@mui/material';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport dayjs from 'dayjs';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport isoWeek from 'dayjs/plugin/isoWeek';\r\ndayjs.extend(isoWeek);\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst AttendanceReports = () => {\r\n  const [attendanceData, setAttendanceData] = useState({});\r\n  const [leaveData, setLeaveData] = useState({});\r\n\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [leaveTabValue, setLeaveTabValue] = useState(0);\r\n\r\n  const [startDate, setStartDate] = useState(dayjs().subtract(7, 'day')); // Default: Last 7 days\r\n  const [endDate, setEndDate] = useState(dayjs()); // Default: Today\r\n\r\n  useEffect(() => {\r\n    fetchAttendanceData('daily', dayjs().format('YYYY-MM-DD'));\r\n  }, []);\r\n\r\n  const fetchAttendanceData = async (type, param) => {\r\n    try {\r\n      const url = `${process.env.REACT_APP_API_URL}/employee/attendance/${type}/${param}`;\r\n      const data = await getRequest(url);\r\n      setAttendanceData(data);\r\n    } catch (err) {\r\n      console.error('Error fetching attendance data:', err);\r\n    }\r\n  };\r\n\r\n  const fetchLeaveData = async (type, param) => {\r\n    try {\r\n      const url = `${process.env.REACT_APP_API_URL}/employee/leave/${type}/${param}`;\r\n      const data = await getRequest(url);\r\n      setLeaveData(data);\r\n    } catch (err) {\r\n      console.error('Error fetching leave data:', err);\r\n    }\r\n  };\r\n\r\n  const fetchLeaveDateRangeData = async () => {\r\n    try {\r\n      const url = `${process.env.REACT_APP_API_URL}/employee/leave/daterange?startDate=${startDate.format(\r\n        'YYYY-MM-DD'\r\n      )}&endDate=${endDate.format('YYYY-MM-DD')}`;\r\n      const data = await getRequest(url);\r\n      setLeaveData(data);\r\n    } catch (err) {\r\n      console.error('Error fetching leave data:', err);\r\n    }\r\n  };\r\n\r\n  const fetchDateRangeData = async () => {\r\n    try {\r\n      const url = `${process.env.REACT_APP_API_URL}/employee/attendance/daterange?startDate=${startDate.format(\r\n        'YYYY-MM-DD'\r\n      )}&endDate=${endDate.format('YYYY-MM-DD')}`;\r\n      const data = await getRequest(url);\r\n      setAttendanceData(data);\r\n    } catch (err) {\r\n      console.error('Error fetching attendance data:', err);\r\n    }\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n\r\n    let param;\r\n    const today = dayjs();\r\n    const year = today.year();\r\n    const month = today.month() + 1;\r\n    const date = today.format('YYYY-MM-DD');\r\n    const week = today.isoWeek();\r\n\r\n    switch (newValue) {\r\n      case 0:\r\n        param = date;\r\n        break;\r\n      case 1:\r\n        param = `${year}/${week}`;\r\n        break;\r\n      case 2:\r\n        param = `${year}/${month}`;\r\n        break;\r\n      case 3:\r\n        param = `${year}`;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    fetchAttendanceData(newValue === 0 ? 'daily' : newValue === 1 ? 'weekly' : newValue === 2 ? 'monthly' : 'yearly', param);\r\n  };\r\n\r\n  const handleLeaveTabChange = (event, newValue) => {\r\n    setLeaveTabValue(newValue);\r\n\r\n    let param;\r\n    const today = dayjs();\r\n    const year = today.year();\r\n    const month = today.month() + 1;\r\n    const date = today.format('YYYY-MM-DD');\r\n    const week = today.isoWeek();\r\n\r\n    switch (newValue) {\r\n      case 0:\r\n        param = date;\r\n        break;\r\n      case 1:\r\n        param = `${year}/${week}`;\r\n        break;\r\n      case 2:\r\n        param = `${year}/${month}`;\r\n        break;\r\n      case 3:\r\n        param = `${year}`;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    fetchLeaveData(newValue === 0 ? 'daily' : newValue === 1 ? 'weekly' : newValue === 2 ? 'monthly' : 'yearly', param);\r\n  };\r\n\r\n  const generateChartData = () => {\r\n    const labels = Object.keys(attendanceData.workingHours || {});\r\n    const values = Object.values(attendanceData.workingHours || {});\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Working Hours',\r\n          data: values,\r\n          backgroundColor: ['#3e95cd'],\r\n          borderColor: ['#3e95cd'],\r\n          borderWidth: 1\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  const generateLeaveChartData = () => {\r\n    const labels = Object.keys(leaveData.leaveCount || {});\r\n    const values = Object.values(leaveData.leaveCount || {});\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Leave Count',\r\n          data: values,\r\n          backgroundColor: ['#8e5ea2'],\r\n          borderColor: ['#8e5ea2'],\r\n          borderWidth: 1\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  return (\r\n    <MainCard title=\"Attendance/Leave Report\">\r\n      <Grid container spacing={2}>\r\n        {/* Date Range Picker */}\r\n        <Grid item lg={2} md={2} sm={2} xs={2}></Grid>\r\n        <Grid item lg={5} md={5} sm={5} xs={5}>\r\n          <DatePicker label=\"Start Date\" value={startDate} onChange={(newValue) => setStartDate(newValue)} />\r\n        </Grid>\r\n        <Grid item lg={5} md={5} sm={5} xs={5}>\r\n          <DatePicker label=\"End Date\" value={endDate} onChange={(newValue) => setEndDate(newValue)} />\r\n        </Grid>\r\n        <Grid item lg={6} md={6} sm={6} xs={6}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              fetchDateRangeData();\r\n            }}\r\n          >\r\n            Get Attendance\r\n          </Button>\r\n        </Grid>\r\n        <Grid item lg={6} md={6} sm={6} xs={6}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              fetchLeaveDateRangeData();\r\n            }}\r\n          >\r\n            Fetch Leave\r\n          </Button>\r\n        </Grid>\r\n        {/* Tabs for predefined filters */}\r\n        <Grid item lg={6} md={6} sm={6} xs={6}>\r\n          <Typography variant=\"h2\">Attendance</Typography>\r\n          <Tabs value={tabValue} onChange={handleTabChange}>\r\n            <Tab label=\"Daily\" />\r\n            <Tab label=\"Weekly\" />\r\n            <Tab label=\"Monthly\" />\r\n            <Tab label=\"Yearly\" />\r\n          </Tabs>\r\n        </Grid>\r\n        <Grid item lg={6} md={6} sm={6} xs={6}>\r\n          <Typography variant=\"h2\">Leave</Typography>\r\n          <Tabs value={leaveTabValue} onChange={handleLeaveTabChange}>\r\n            <Tab label=\"Daily\" />\r\n            <Tab label=\"Weekly\" />\r\n            <Tab label=\"Monthly\" />\r\n            <Tab label=\"Yearly\" />\r\n          </Tabs>\r\n        </Grid>\r\n\r\n        {/* Display Stats */}\r\n        <Grid item lg={6} md={6} sm={6} xs={6}>\r\n          <Typography variant=\"h6\">Total Present: {attendanceData.totalPresent || 0}</Typography>\r\n          <Typography variant=\"h6\">Total Absent: {attendanceData.totalAbsent || 0}</Typography>\r\n        </Grid>\r\n        <Grid item lg={6} md={6} sm={6} xs={6}>\r\n          <Typography variant=\"h6\">Total Absent: {leaveData.totalAbsent || 0}</Typography>\r\n        </Grid>\r\n        {/* Chart */}\r\n        <Grid item lg={6} md={6} sm={6} xs={6}>\r\n          <Bar data={generateChartData()} />\r\n        </Grid>\r\n        <Grid item lg={6} md={6} sm={6} xs={6}>\r\n          <Bar data={generateLeaveChartData()} />\r\n        </Grid>\r\n      </Grid>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default AttendanceReports;\r\n"],"names":["dayjs","isoWeek","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","AttendanceReports","attendanceData","setAttendanceData","useState","leaveData","setLeaveData","tabValue","setTabValue","leaveTabValue","setLeaveTabValue","startDate","setStartDate","subtract","endDate","setEndDate","useEffect","fetchAttendanceData","format","async","type","param","url","data","getRequest","err","console","error","_jsx","MainCard","title","children","_jsxs","Grid","container","spacing","item","lg","md","sm","xs","DatePicker","label","value","onChange","newValue","Button","variant","color","onClick","fetchDateRangeData","fetchLeaveDateRangeData","Typography","Tabs","handleTabChange","event","today","year","month","date","week","Tab","handleLeaveTabChange","fetchLeaveData","totalPresent","totalAbsent","Bar","labels","Object","keys","workingHours","datasets","values","backgroundColor","borderColor","borderWidth","leaveCount"],"sourceRoot":""}