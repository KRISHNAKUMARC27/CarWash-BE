{"version":3,"file":"static/js/6823.2caa4336.chunk.js","mappings":"uTASAA,IAAAA,OAAaC,KAEbC,EAAAA,GAAAA,SAAiBC,EAAAA,GAAeC,EAAAA,GAAaC,EAAAA,GAAYC,EAAAA,GAAOC,EAAAA,EAASC,EAAAA,IA+UzE,UA7U0BC,KACxB,MAAOC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,CAAC,IAC/CC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,CAAC,IACrCG,EAAiBC,IAAsBJ,EAAAA,EAAAA,UAAS,CAAC,IAEjDK,EAAUC,IAAeN,EAAAA,EAAAA,UAAS,IAClCO,EAAeC,IAAoBR,EAAAA,EAAAA,UAAS,IAC5CS,EAAqBC,IAA0BV,EAAAA,EAAAA,UAAS,IAExDW,EAAWC,IAAgBZ,EAAAA,EAAAA,UAASZ,MAAQyB,SAAS,EAAG,SACxDC,EAASC,IAAcf,EAAAA,EAAAA,UAASZ,QAEvC4B,EAAAA,EAAAA,YAAU,KACRC,EAAoB,QAAS7B,MAAQ8B,OAAO,eAC5CC,EAAqB,QAAS/B,MAAQ8B,OAAO,eAC7CE,EAAe,QAAShC,MAAQ8B,OAAO,cAAc,GACpD,IAEH,MAAMD,EAAsBI,MAAOC,EAAMC,KACvC,IACE,MAAMC,EAAO,wBAAuDF,KAAQC,IACtEE,QAAaC,EAAAA,EAAAA,IAAWF,GAC9BzB,EAAkB0B,EAGpB,CAFE,MAAOE,GACPC,QAAQC,MAAM,kCAAmCF,EACnD,GAGIR,EAAuBE,MAAOC,EAAMC,KACxC,IACE,MAAMC,EAAO,4BAA2DF,KAAQC,IAC1EE,QAAaC,EAAAA,EAAAA,IAAWF,GAC9BpB,EAAmBqB,EAGrB,CAFE,MAAOE,GACPC,QAAQC,MAAM,oCAAqCF,EACrD,GAGIP,EAAiBC,MAAOC,EAAMC,KAClC,IACE,MAAMC,EAAO,mBAAkDF,KAAQC,IACjEE,QAAaC,EAAAA,EAAAA,IAAWF,GAC9BtB,EAAauB,EAGf,CAFE,MAAOE,GACPC,QAAQC,MAAM,6BAA8BF,EAC9C,GAuLF,OACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACC,MAAM,0BAAyBC,UACvCC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEJ,SAAA,EAEzBC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACE,MAAI,EAACD,QAAS,EAAGE,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAGT,SAAA,EAC5DH,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACI,GAAI,GAAGT,UAChBH,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACC,MAAM,aAAaC,MAAOlC,EAAWmC,SAAWC,GAAanC,EAAamC,QAExFjB,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACI,GAAI,GAAGT,UAChBH,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACC,MAAM,WAAWC,MAAO/B,EAASgC,SAAWC,GAAahC,EAAWgC,QAElFjB,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACI,GAAI,GAAGT,UAChBH,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,QAASA,KAvLM9B,WACzB,IACE,MAAMG,EAAO,4CAA2Eb,EAAUO,OAChG,yBACWJ,EAAQI,OAAO,gBACtBO,QAAaC,EAAAA,EAAAA,IAAWF,GAC9BzB,EAAkB0B,EAGpB,CAFE,MAAOE,GACPC,QAAQC,MAAM,kCAAmCF,EACnD,GA+KYyB,EAAoB,EACpBnB,SACH,sBAIHC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACG,MAAI,EAACI,GAAI,GAAGT,SAAA,EAChBH,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACJ,QAAQ,KAAIhB,SAAC,gBACzBC,EAAAA,EAAAA,MAACoB,EAAAA,EAAI,CAACT,MAAOxC,EAAUyC,SAxKTS,CAACC,EAAOT,KAG9B,IAAIxB,EAFJjB,EAAYyC,GAGZ,MAAMU,EAAQrE,MACRsE,EAAOD,EAAMC,OACbC,EAAQF,EAAME,QAAU,EACxBC,EAAOH,EAAMvC,OAAO,cACpB2C,EAAOJ,EAAMpE,UAEnB,OAAQ0D,GACN,KAAK,EACHxB,EAAQqC,EACR,MACF,KAAK,EACHrC,EAAS,GAAEmC,KAAQG,IACnB,MACF,KAAK,EACHtC,EAAS,GAAEmC,KAAQC,IACnB,MACF,KAAK,EACHpC,EAAS,GAAEmC,IACX,MACF,QACE,OAGJzC,EAAiC,IAAb8B,EAAiB,QAAuB,IAAbA,EAAiB,SAAwB,IAAbA,EAAiB,UAAY,SAAUxB,EAAM,EA6I/DU,SAAA,EAC/CH,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAClB,MAAM,WACXd,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAClB,MAAM,YACXd,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAClB,MAAM,aACXd,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAClB,MAAM,kBAGfV,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACG,MAAI,EAACI,GAAI,GAAGT,SAAA,EAChBC,EAAAA,EAAAA,MAACmB,EAAAA,EAAU,CAACJ,QAAQ,KAAIhB,SAAA,CAAC,kBAAgBnC,EAAeiE,cAAgB,MACxE7B,EAAAA,EAAAA,MAACmB,EAAAA,EAAU,CAACJ,QAAQ,KAAIhB,SAAA,CAAC,iBAAenC,EAAekE,aAAe,SAExElC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACI,GAAI,GAAGT,UAChBH,EAAAA,EAAAA,KAACmC,EAAAA,GAAG,CAACxC,KAtFN,CACLyC,OAJaC,OAAOC,KAAKtE,EAAeuE,cAAgB,CAAC,GAKzDC,SAAU,CACR,CACE1B,MAAO,gBACPnB,KAPS0C,OAAOI,OAAOzE,EAAeuE,cAAgB,CAAC,GAQvDG,gBAAiB,CAAC,WAClBC,YAAa,CAAC,WACdC,YAAa,aAmFfxC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACE,MAAI,EAACD,QAAS,EAAGE,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAGT,SAAA,EAC5DH,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACI,GAAI,GAAGT,UAChBH,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,QAASA,KAlOW9B,WAC9B,IACE,MAAMG,EAAO,uCAAsEb,EAAUO,OAC3F,yBACWJ,EAAQI,OAAO,gBACtBO,QAAaC,EAAAA,EAAAA,IAAWF,GAC9BtB,EAAauB,EAGf,CAFE,MAAOE,GACPC,QAAQC,MAAM,6BAA8BF,EAC9C,GA0NYgD,EAAyB,EACzB1C,SACH,mBAIHC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACG,MAAI,EAACI,GAAI,GAAGT,SAAA,EAChBH,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACJ,QAAQ,KAAIhB,SAAC,WACzBC,EAAAA,EAAAA,MAACoB,EAAAA,EAAI,CAACT,MAAOtC,EAAeuC,SAzKT8B,CAACpB,EAAOT,KAGnC,IAAIxB,EAFJf,EAAiBuC,GAGjB,MAAMU,EAAQrE,MACRsE,EAAOD,EAAMC,OACbC,EAAQF,EAAME,QAAU,EACxBC,EAAOH,EAAMvC,OAAO,cACpB2C,EAAOJ,EAAMpE,UAEnB,OAAQ0D,GACN,KAAK,EACHxB,EAAQqC,EACR,MACF,KAAK,EACHrC,EAAS,GAAEmC,KAAQG,IACnB,MACF,KAAK,EACHtC,EAAS,GAAEmC,KAAQC,IACnB,MACF,KAAK,EACHpC,EAAS,GAAEmC,IACX,MACF,QACE,OAGJtC,EAA4B,IAAb2B,EAAiB,QAAuB,IAAbA,EAAiB,SAAwB,IAAbA,EAAiB,UAAY,SAAUxB,EAAM,EA8IhDU,SAAA,EACzDH,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAClB,MAAM,WACXd,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAClB,MAAM,YACXd,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAClB,MAAM,aACXd,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAClB,MAAM,kBAGfd,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACI,GAAI,GAAGT,UAChBC,EAAAA,EAAAA,MAACmB,EAAAA,EAAU,CAACJ,QAAQ,KAAIhB,SAAA,CAAC,iBAAehC,EAAU+D,aAAe,QAEnElC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACI,GAAI,GAAGT,UAChBH,EAAAA,EAAAA,KAACmC,EAAAA,GAAG,CAACxC,KAlGN,CACLyC,OAJaC,OAAOC,KAAKnE,EAAU4E,YAAc,CAAC,GAKlDP,SAAU,CACR,CACE1B,MAAO,cACPnB,KAPS0C,OAAOI,OAAOtE,EAAU4E,YAAc,CAAC,GAQhDL,gBAAiB,CAAC,WAClBC,YAAa,CAAC,WACdC,YAAa,aA+FfxC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACE,MAAI,EAACD,QAAS,EAAGE,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAGT,SAAA,EAC5DH,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACI,GAAI,GAAGT,UAChBH,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,QAASA,KAxOiB9B,WACpC,IACE,MAAMG,EAAO,gDAA+Eb,EAAUO,OACpG,yBACWJ,EAAQI,OAAO,gBACtBO,QAAaC,EAAAA,EAAAA,IAAWF,GAC9BpB,EAAmBqB,EAGrB,CAFE,MAAOE,GACPC,QAAQC,MAAM,oCAAqCF,EACrD,GAgOYmD,EAA+B,EAC/B7C,SACH,wBAIHC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACG,MAAI,EAACI,GAAI,GAAGT,SAAA,EAChBH,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACJ,QAAQ,KAAIhB,SAAC,kBACzBC,EAAAA,EAAAA,MAACoB,EAAAA,EAAI,CAACT,MAAOpC,EAAqBqC,SAzKTiC,CAACvB,EAAOT,KAGzC,IAAIxB,EAFJb,EAAuBqC,GAGvB,MAAMU,EAAQrE,MACRsE,EAAOD,EAAMC,OACbC,EAAQF,EAAME,QAAU,EACxBC,EAAOH,EAAMvC,OAAO,cACpB2C,EAAOJ,EAAMpE,UAEnB,OAAQ0D,GACN,KAAK,EACHxB,EAAQqC,EACR,MACF,KAAK,EACHrC,EAAS,GAAEmC,KAAQG,IACnB,MACF,KAAK,EACHtC,EAAS,GAAEmC,KAAQC,IACnB,MACF,KAAK,EACHpC,EAAS,GAAEmC,IACX,MACF,QACE,OAGJvC,EAAkC,IAAb4B,EAAiB,QAAuB,IAAbA,EAAiB,SAAwB,IAAbA,EAAiB,UAAY,SAAUxB,EAAM,EA8I1CU,SAAA,EACrEH,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAClB,MAAM,WACXd,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAClB,MAAM,YACXd,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAClB,MAAM,aACXd,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAClB,MAAM,kBAGfV,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACG,MAAI,EAACI,GAAI,GAAGT,SAAA,EAChBC,EAAAA,EAAAA,MAACmB,EAAAA,EAAU,CAACJ,QAAQ,KAAIhB,SAAA,CAAC,kBAAgB9B,EAAgB4D,cAAgB,MACzE7B,EAAAA,EAAAA,MAACmB,EAAAA,EAAU,CAACJ,QAAQ,KAAIhB,SAAA,CAAC,iBAAe9B,EAAgB6D,aAAe,SAEzElC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACI,GAAI,GAAGT,UAChBH,EAAAA,EAAAA,KAACmC,EAAAA,GAAG,CAACxC,KA/GN,CACLyC,OAJaC,OAAOC,KAAKjE,EAAgB6E,wBAA0B,CAAC,GAKpEV,SAAU,CACR,CACE1B,MAAO,4BACPnB,KAPS0C,OAAOI,OAAOpE,EAAgB6E,wBAA0B,CAAC,GAQlER,gBAAiB,CAAC,WAClBC,YAAa,CAAC,WACdC,YAAa,gBA2GR,C","sources":["views/attendance/AttendanceReports.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { getRequest } from 'utils/fetchRequest';\r\nimport { Tabs, Tab, Typography, Grid, Button } from '@mui/material';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport dayjs from 'dayjs';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport isoWeek from 'dayjs/plugin/isoWeek';\r\ndayjs.extend(isoWeek);\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst AttendanceReports = () => {\r\n  const [attendanceData, setAttendanceData] = useState({});\r\n  const [leaveData, setLeaveData] = useState({});\r\n  const [workingDaysData, setWorkingDaysData] = useState({});\r\n\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [leaveTabValue, setLeaveTabValue] = useState(0);\r\n  const [workingDaysTabValue, setWorkingDaysTabValue] = useState(0);\r\n\r\n  const [startDate, setStartDate] = useState(dayjs().subtract(7, 'day')); // Default: Last 7 days\r\n  const [endDate, setEndDate] = useState(dayjs()); // Default: Today\r\n\r\n  useEffect(() => {\r\n    fetchAttendanceData('daily', dayjs().format('YYYY-MM-DD'));\r\n    fetchWorkingDaysData('daily', dayjs().format('YYYY-MM-DD'));\r\n    fetchLeaveData('daily', dayjs().format('YYYY-MM-DD'));\r\n  }, []);\r\n\r\n  const fetchAttendanceData = async (type, param) => {\r\n    try {\r\n      const url = `${process.env.REACT_APP_API_URL}/employee/attendance/${type}/${param}`;\r\n      const data = await getRequest(url);\r\n      setAttendanceData(data);\r\n    } catch (err) {\r\n      console.error('Error fetching attendance data:', err);\r\n    }\r\n  };\r\n\r\n  const fetchWorkingDaysData = async (type, param) => {\r\n    try {\r\n      const url = `${process.env.REACT_APP_API_URL}/employee/attendance/day/${type}/${param}`;\r\n      const data = await getRequest(url);\r\n      setWorkingDaysData(data);\r\n    } catch (err) {\r\n      console.error('Error fetching working days data:', err);\r\n    }\r\n  };\r\n\r\n  const fetchLeaveData = async (type, param) => {\r\n    try {\r\n      const url = `${process.env.REACT_APP_API_URL}/employee/leave/${type}/${param}`;\r\n      const data = await getRequest(url);\r\n      setLeaveData(data);\r\n    } catch (err) {\r\n      console.error('Error fetching leave data:', err);\r\n    }\r\n  };\r\n\r\n  const fetchLeaveDateRangeData = async () => {\r\n    try {\r\n      const url = `${process.env.REACT_APP_API_URL}/employee/leave/daterange?startDate=${startDate.format(\r\n        'YYYY-MM-DD'\r\n      )}&endDate=${endDate.format('YYYY-MM-DD')}`;\r\n      const data = await getRequest(url);\r\n      setLeaveData(data);\r\n    } catch (err) {\r\n      console.error('Error fetching leave data:', err);\r\n    }\r\n  };\r\n\r\n  const fetchDateRangeData = async () => {\r\n    try {\r\n      const url = `${process.env.REACT_APP_API_URL}/employee/attendance/daterange?startDate=${startDate.format(\r\n        'YYYY-MM-DD'\r\n      )}&endDate=${endDate.format('YYYY-MM-DD')}`;\r\n      const data = await getRequest(url);\r\n      setAttendanceData(data);\r\n    } catch (err) {\r\n      console.error('Error fetching attendance data:', err);\r\n    }\r\n  };\r\n\r\n  const fetchWorkingDaysDateRangeData = async () => {\r\n    try {\r\n      const url = `${process.env.REACT_APP_API_URL}/employee/attendance/day/daterange?startDate=${startDate.format(\r\n        'YYYY-MM-DD'\r\n      )}&endDate=${endDate.format('YYYY-MM-DD')}`;\r\n      const data = await getRequest(url);\r\n      setWorkingDaysData(data);\r\n    } catch (err) {\r\n      console.error('Error fetching working days data:', err);\r\n    }\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n\r\n    let param;\r\n    const today = dayjs();\r\n    const year = today.year();\r\n    const month = today.month() + 1;\r\n    const date = today.format('YYYY-MM-DD');\r\n    const week = today.isoWeek();\r\n\r\n    switch (newValue) {\r\n      case 0:\r\n        param = date;\r\n        break;\r\n      case 1:\r\n        param = `${year}/${week}`;\r\n        break;\r\n      case 2:\r\n        param = `${year}/${month}`;\r\n        break;\r\n      case 3:\r\n        param = `${year}`;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    fetchAttendanceData(newValue === 0 ? 'daily' : newValue === 1 ? 'weekly' : newValue === 2 ? 'monthly' : 'yearly', param);\r\n  };\r\n\r\n  const handleLeaveTabChange = (event, newValue) => {\r\n    setLeaveTabValue(newValue);\r\n\r\n    let param;\r\n    const today = dayjs();\r\n    const year = today.year();\r\n    const month = today.month() + 1;\r\n    const date = today.format('YYYY-MM-DD');\r\n    const week = today.isoWeek();\r\n\r\n    switch (newValue) {\r\n      case 0:\r\n        param = date;\r\n        break;\r\n      case 1:\r\n        param = `${year}/${week}`;\r\n        break;\r\n      case 2:\r\n        param = `${year}/${month}`;\r\n        break;\r\n      case 3:\r\n        param = `${year}`;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    fetchLeaveData(newValue === 0 ? 'daily' : newValue === 1 ? 'weekly' : newValue === 2 ? 'monthly' : 'yearly', param);\r\n  };\r\n\r\n  const handleWorkingDaysTabChange = (event, newValue) => {\r\n    setWorkingDaysTabValue(newValue);\r\n\r\n    let param;\r\n    const today = dayjs();\r\n    const year = today.year();\r\n    const month = today.month() + 1;\r\n    const date = today.format('YYYY-MM-DD');\r\n    const week = today.isoWeek();\r\n\r\n    switch (newValue) {\r\n      case 0:\r\n        param = date;\r\n        break;\r\n      case 1:\r\n        param = `${year}/${week}`;\r\n        break;\r\n      case 2:\r\n        param = `${year}/${month}`;\r\n        break;\r\n      case 3:\r\n        param = `${year}`;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    fetchWorkingDaysData(newValue === 0 ? 'daily' : newValue === 1 ? 'weekly' : newValue === 2 ? 'monthly' : 'yearly', param);\r\n  };\r\n\r\n  const generateChartData = () => {\r\n    const labels = Object.keys(attendanceData.workingHours || {});\r\n    const values = Object.values(attendanceData.workingHours || {});\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Working Hours',\r\n          data: values,\r\n          backgroundColor: ['#3e95cd'],\r\n          borderColor: ['#3e95cd'],\r\n          borderWidth: 1\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  const generateLeaveChartData = () => {\r\n    const labels = Object.keys(leaveData.leaveCount || {});\r\n    const values = Object.values(leaveData.leaveCount || {});\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Leave Count',\r\n          data: values,\r\n          backgroundColor: ['#8e5ea2'],\r\n          borderColor: ['#8e5ea2'],\r\n          borderWidth: 1\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  const generateWorkingDaysChartData = () => {\r\n    const labels = Object.keys(workingDaysData.workingDaysPerEmployee || {});\r\n    const values = Object.values(workingDaysData.workingDaysPerEmployee || {});\r\n\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Working Days Per Employee',\r\n          data: values,\r\n          backgroundColor: ['#ff6384'],\r\n          borderColor: ['#ff6384'],\r\n          borderWidth: 1\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  return (\r\n    <MainCard title=\"Attendance/Leave Report\">\r\n      <Grid container spacing={2}>\r\n        {/* Attendance Section */}\r\n        <Grid container item spacing={2} lg={4} md={4} sm={12} xs={12}>\r\n          <Grid item xs={12}>\r\n            <DatePicker label=\"Start Date\" value={startDate} onChange={(newValue) => setStartDate(newValue)} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <DatePicker label=\"End Date\" value={endDate} onChange={(newValue) => setEndDate(newValue)} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                fetchDateRangeData();\r\n              }}\r\n            >\r\n              Get Attendance\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h2\">Attendance</Typography>\r\n            <Tabs value={tabValue} onChange={handleTabChange}>\r\n              <Tab label=\"Daily\" />\r\n              <Tab label=\"Weekly\" />\r\n              <Tab label=\"Monthly\" />\r\n              <Tab label=\"Yearly\" />\r\n            </Tabs>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\">Total Present: {attendanceData.totalPresent || 0}</Typography>\r\n            <Typography variant=\"h6\">Total Absent: {attendanceData.totalAbsent || 0}</Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Bar data={generateChartData()} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Leave Section */}\r\n        <Grid container item spacing={2} lg={4} md={4} sm={12} xs={12}>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                fetchLeaveDateRangeData();\r\n              }}\r\n            >\r\n              Fetch Leave\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h2\">Leave</Typography>\r\n            <Tabs value={leaveTabValue} onChange={handleLeaveTabChange}>\r\n              <Tab label=\"Daily\" />\r\n              <Tab label=\"Weekly\" />\r\n              <Tab label=\"Monthly\" />\r\n              <Tab label=\"Yearly\" />\r\n            </Tabs>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\">Total Absent: {leaveData.totalAbsent || 0}</Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Bar data={generateLeaveChartData()} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Working Days Section */}\r\n        <Grid container item spacing={2} lg={4} md={4} sm={12} xs={12}>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                fetchWorkingDaysDateRangeData();\r\n              }}\r\n            >\r\n              Get Working Days\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h2\">Working Days</Typography>\r\n            <Tabs value={workingDaysTabValue} onChange={handleWorkingDaysTabChange}>\r\n              <Tab label=\"Daily\" />\r\n              <Tab label=\"Weekly\" />\r\n              <Tab label=\"Monthly\" />\r\n              <Tab label=\"Yearly\" />\r\n            </Tabs>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\">Total Present: {workingDaysData.totalPresent || 0}</Typography>\r\n            <Typography variant=\"h6\">Total Absent: {workingDaysData.totalAbsent || 0}</Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Bar data={generateWorkingDaysChartData()} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default AttendanceReports;\r\n"],"names":["dayjs","isoWeek","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","AttendanceReports","attendanceData","setAttendanceData","useState","leaveData","setLeaveData","workingDaysData","setWorkingDaysData","tabValue","setTabValue","leaveTabValue","setLeaveTabValue","workingDaysTabValue","setWorkingDaysTabValue","startDate","setStartDate","subtract","endDate","setEndDate","useEffect","fetchAttendanceData","format","fetchWorkingDaysData","fetchLeaveData","async","type","param","url","data","getRequest","err","console","error","_jsx","MainCard","title","children","_jsxs","Grid","container","spacing","item","lg","md","sm","xs","DatePicker","label","value","onChange","newValue","Button","variant","color","onClick","fetchDateRangeData","Typography","Tabs","handleTabChange","event","today","year","month","date","week","Tab","totalPresent","totalAbsent","Bar","labels","Object","keys","workingHours","datasets","values","backgroundColor","borderColor","borderWidth","fetchLeaveDateRangeData","handleLeaveTabChange","leaveCount","fetchWorkingDaysDateRangeData","handleWorkingDaysTabChange","workingDaysPerEmployee"],"sourceRoot":""}