{"version":3,"file":"static/js/2119.b4630671.chunk.js","mappings":"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","sources":["views/service/AllService.js","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["import React, { useMemo, useState, useEffect, lazy } from 'react';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport {\r\n  createTheme,\r\n  ThemeProvider,\r\n  useTheme,\r\n  IconButton,\r\n  Tooltip,\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Button\r\n} from '@mui/material';\r\nimport { Edit } from '@mui/icons-material';\r\nimport { gridSpacing } from 'store/constant';\r\nimport Loadable from 'ui-component/Loadable';\r\nimport { getRequest } from 'utils/fetchRequest';\r\n\r\nconst ServiceCreate = Loadable(lazy(() => import('views/service/ServiceCreate')));\r\n\r\nconst AllService = () => {\r\n  const [data, setData] = useState([]);\r\n  //const [serviceCategoryList, setServiceCategoryList] = useState([]);\r\n  const [serviceDetails, setServiceDetails] = useState({});\r\n  const [serviceUpdateOpen, setServiceUpdateOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchAllServiceData();\r\n    //fetchAllServiceCategoryListData();\r\n    return () => {\r\n      setData([]);\r\n      //setServiceCategoryList([]);\r\n    };\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setServiceUpdateOpen(false);\r\n  };\r\n\r\n  const fetchAllServiceData = async () => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/service');\r\n      setData(data);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  //should be memoized or stable\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        accessorKey: 'category', //access nested data with dot notation\r\n        header: 'Category',\r\n        size: 150,\r\n        filterVariant: 'multi-select'\r\n      },\r\n      {\r\n        accessorKey: 'desc', //normal accessorKey\r\n        header: 'Desc',\r\n        size: 250\r\n      },\r\n      {\r\n        accessorKey: 'amount',\r\n        header: 'Amount',\r\n        size: 100\r\n      },\r\n      {\r\n        accessorKey: 'cgst',\r\n        header: 'CGST',\r\n        size: 100\r\n      },\r\n      {\r\n        accessorKey: 'sgst',\r\n        header: 'SGST',\r\n        size: 100\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const globalTheme = useTheme();\r\n\r\n  const tableTheme = useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode: globalTheme.palette.mode, //let's use the same dark/light mode as the global theme\r\n          primary: globalTheme.palette.secondary, //swap in the secondary color as the primary for the table\r\n          info: {\r\n            main: 'rgb(255,122,0)' //add in a custom color for the toolbar alert background stuff\r\n          },\r\n          background: {\r\n            default: 'rgba(0, 0, 0, 0)' // set background color to fully transparent\r\n            // set background color to transparent\r\n            // globalTheme.palette.mode === \"light\"\r\n            //   ? \"rgb(254,255,244)\" //random light yellow color for the background in light mode\r\n            //   : \"#000\", //pure black table in dark mode for fun\r\n          }\r\n        },\r\n        typography: {\r\n          button: {\r\n            textTransform: 'none', //customize typography styles for all buttons in table by default\r\n            fontSize: '1.2rem'\r\n          }\r\n        },\r\n        components: {\r\n          MuiTooltip: {\r\n            styleOverrides: {\r\n              tooltip: {\r\n                fontSize: '1.1rem' //override to make tooltip font size larger\r\n              }\r\n            }\r\n          },\r\n          MuiSwitch: {\r\n            styleOverrides: {\r\n              thumb: {\r\n                color: 'pink' //change the color of the switch thumb in the columns show/hide menu to pink\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }),\r\n    [globalTheme]\r\n  );\r\n  const gradientAngle = 195;\r\n  const color1 = '#ffff';\r\n  const color2 = '#bc9595';\r\n\r\n  return (\r\n    <div>\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={data}\r\n          enableFacetedValues\r\n          editingMode=\"modal\"\r\n          enableEditing\r\n          muiTablePaperProps={{\r\n            elevation: 0,\r\n            sx: {\r\n              borderRadius: '0',\r\n              //backgroundColor: \"#344767\",\r\n              background: `linear-gradient(${gradientAngle}deg, ${color1}, ${color2})`\r\n            }\r\n          }}\r\n          renderRowActions={({ row }) => (\r\n            <Box sx={{ display: 'flex', gap: '1rem' }}>\r\n              <Tooltip arrow placement=\"left\" title=\"Update Service Info\">\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setServiceUpdateOpen(false);\r\n                    setServiceDetails(row.original);\r\n                    setServiceUpdateOpen(true);\r\n                  }}\r\n                >\r\n                  <Edit />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Box>\r\n          )}\r\n        />{' '}\r\n      </ThemeProvider>\r\n      <br></br>\r\n\r\n      <Dialog open={serviceUpdateOpen} onClose={handleClose} aria-labelledby=\"data-row-dialog-title\" fullWidth maxWidth=\"lg\">\r\n        <DialogContent dividers style={{ backgroundColor: 'white', color: 'black' }}>\r\n          {' '}\r\n          <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                  <Divider />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h2\">{'Updating Service: ' + serviceDetails.desc}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <ServiceCreate\r\n                    data={serviceDetails}\r\n                    setServiceUpdateOpen={setServiceUpdateOpen}\r\n                    fetchAllServiceData={fetchAllServiceData}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <br></br>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllService;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');"],"names":["ServiceCreate","Loadable","lazy","AllService","data","setData","useState","serviceDetails","setServiceDetails","serviceUpdateOpen","setServiceUpdateOpen","useEffect","fetchAllServiceData","handleClose","async","getRequest","err","console","error","message","columns","useMemo","accessorKey","header","size","filterVariant","globalTheme","useTheme","tableTheme","createTheme","palette","mode","primary","secondary","info","main","background","default","typography","button","textTransform","fontSize","components","MuiTooltip","styleOverrides","tooltip","MuiSwitch","thumb","color","_jsxs","children","ThemeProvider","theme","_jsx","MaterialReactTable","enableFacetedValues","editingMode","enableEditing","muiTablePaperProps","elevation","sx","borderRadius","renderRowActions","_ref","row","Box","display","gap","Tooltip","arrow","placement","title","IconButton","onClick","original","Edit","Dialog","open","onClose","fullWidth","maxWidth","DialogContent","dividers","style","backgroundColor","Grid","container","spacing","gridSpacing","item","xs","Divider","Typography","variant","desc","DialogActions","Button","createSvgIcon","d"],"sourceRoot":""}