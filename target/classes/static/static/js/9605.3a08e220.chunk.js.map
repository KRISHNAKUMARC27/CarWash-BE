{"version":3,"file":"static/js/9605.3a08e220.chunk.js","mappings":"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","sources":["views/dashboard/Default/chart-data/total-order-year-line-chart.js","views/dashboard/Default/TotalRevenueLineChartCard.js","views/dashboard/Default/TotalJobsLineChartCard.js","views/dashboard/Default/TotalIncomeDarkCard.js","views/dashboard/Default/TotalIncomeLightCard.js","views/dashboard/Default/SparesEvents.js","views/dashboard/Default/chart-data/total-growth-bar-chart.js","views/dashboard/Default/TotalJobCardBarChart.js","views/dashboard/Default/TotalJobCardRevenueBarChart.js","views/dashboard/Default/TotalJobRevenueSplitBarChart.js","views/dashboard/Default/index.js"],"sourcesContent":["// ===========================|| DASHBOARD - TOTAL ORDER YEAR CHART ||=========================== //\n\nconst chartData = {\n  type: 'line',\n  height: 90,\n  options: {\n    chart: {\n      sparkline: {\n        enabled: true\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: ['#fff'],\n    fill: {\n      type: 'solid',\n      opacity: 1\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 3\n    },\n    yaxis: {\n      min: 2000,\n      max: 100000\n    },\n    tooltip: {\n      theme: 'dark',\n      fixed: {\n        enabled: false\n      },\n      x: {\n        show: false\n      },\n      y: {\n        title: 'Total Order'\n      },\n      marker: {\n        show: false\n      }\n    }\n  },\n  series: [\n    {\n      name: 'series1',\n      data: [0, 44, 9, 54, 45, 66, 41, 69]\n    }\n  ]\n};\n\nexport default chartData;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\n\n// third-party\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n//import SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\n\n//import ChartDataMonth from './chart-data/total-order-month-line-chart';\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\n\n// assets\nimport CurrencyRupeeIcon from '@mui/icons-material/CurrencyRupee';\n//import ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport { getRequest } from 'utils/fetchRequest';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.dark,\n  color: '#fff',\n  overflow: 'hidden',\n  position: 'relative',\n  '&>div': {\n    position: 'relative',\n    zIndex: 5\n  },\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: theme.palette.primary[800],\n    borderRadius: '50%',\n    zIndex: 1,\n    top: -85,\n    right: -95,\n    [theme.breakpoints.down('sm')]: {\n      top: -105,\n      right: -140\n    }\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    zIndex: 1,\n    width: 210,\n    height: 210,\n    background: theme.palette.primary[800],\n    borderRadius: '50%',\n    top: -125,\n    right: -15,\n    opacity: 0.5,\n    [theme.breakpoints.down('sm')]: {\n      top: -155,\n      right: -70\n    }\n  }\n}));\n\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nfunction TotalRevenueLineChartCard() {\n  const theme = useTheme();\n  const [revenueStats, setRevenueStats] = useState();\n  const [chartData, setChartData] = useState(ChartDataYear);\n  const [timeValue, setTimeValue] = useState('D');\n  const [displayFlag, setDisplayFlag] = useState(false);\n\n  useEffect(() => {\n    fetchRevenueStats('D');\n\n    return () => {\n      setRevenueStats();\n      // setChartData(ChartDataYear);\n      // setTimeValue('D');\n      // setDisplayFlag(true);\n    };\n  }, []);\n\n  const fetchRevenueStats = async (uri) => {\n    try {\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/revenueEarnings/' + uri);\n      setRevenueStats(data);\n      setChartData(data.chartData);\n      setDisplayFlag(true);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const handleChangeTime = (newValue) => {\n    switch (newValue) {\n      case 'D':\n        setDisplayFlag(false);\n        fetchRevenueStats('D');\n        break;\n      case 'W':\n        setDisplayFlag(false);\n        fetchRevenueStats('W');\n        break;\n      case 'M':\n        setDisplayFlag(false);\n        fetchRevenueStats('M');\n        break;\n      case 'Y':\n        setDisplayFlag(false);\n        fetchRevenueStats('Y');\n        break;\n      default:\n        setDisplayFlag(false);\n        fetchRevenueStats('D');\n        break;\n    }\n    setTimeValue(newValue);\n  };\n\n  return (\n    <>\n      {/* {isLoading ? (\n        <SkeletonTotalOrderCard />\n      ) : ( */}\n      <CardWrapper border={false} content={false}>\n        <Box sx={{ p: 2.25 }}>\n          <Grid container direction=\"column\">\n            <Grid item>\n              <Grid container justifyContent=\"space-between\">\n                <Grid item>\n                  <Avatar\n                    variant=\"rounded\"\n                    sx={{\n                      ...theme.typography.commonAvatar,\n                      ...theme.typography.largeAvatar,\n                      backgroundColor: theme.palette.primary[800],\n                      color: '#fff',\n                      mt: 1\n                    }}\n                  >\n                    <CurrencyRupeeIcon fontSize=\"inherit\" />\n                  </Avatar>\n                </Grid>\n                <Grid item>\n                  <Button\n                    disableElevation\n                    variant={timeValue === 'D' ? 'contained' : 'text'}\n                    size=\"small\"\n                    sx={{ color: 'inherit', mr: 1 }}\n                    onClick={() => handleChangeTime('D')}\n                  >\n                    Day\n                  </Button>\n                  <Button\n                    disableElevation\n                    variant={timeValue === 'W' ? 'contained' : 'text'}\n                    size=\"small\"\n                    sx={{ color: 'inherit', mr: 1 }}\n                    onClick={() => handleChangeTime('W')}\n                  >\n                    Week\n                  </Button>\n                  <Button\n                    disableElevation\n                    variant={timeValue === 'M' ? 'contained' : 'text'}\n                    size=\"small\"\n                    sx={{ color: 'inherit', mr: 1 }}\n                    onClick={() => handleChangeTime('M')}\n                  >\n                    Month\n                  </Button>\n                  <Button\n                    disableElevation\n                    variant={timeValue === 'Y' ? 'contained' : 'text'}\n                    size=\"small\"\n                    sx={{ color: 'inherit' }}\n                    onClick={() => handleChangeTime('Y')}\n                  >\n                    Year\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item sx={{ mb: 0.75 }}>\n              <Grid container alignItems=\"center\">\n                <Grid item xs={6}>\n                  <Grid container alignItems=\"center\">\n                    <Grid item>\n                      {displayFlag && (\n                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                          {/* {'₹ '}  */}\n                          {revenueStats.grandTotalSum}\n                        </Typography>\n                      )}\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography\n                        sx={{\n                          fontSize: '1rem',\n                          fontWeight: 500,\n                          color: theme.palette.primary[200]\n                        }}\n                      >\n                        Total Revenue\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item xs={6}>\n                  {displayFlag && <Chart {...chartData} />}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Box>\n      </CardWrapper>\n      {/* )} */}\n    </>\n  );\n}\n\nTotalRevenueLineChartCard.propTypes = {\n  isLoading: PropTypes.bool\n};\n\nexport default TotalRevenueLineChartCard;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\n\n// third-party\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n//import SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\n\n//import ChartDataMonth from './chart-data/total-order-month-line-chart';\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\n\n// assets\nimport WorkHistoryIcon from '@mui/icons-material/WorkHistory';\n//import LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\n//import ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport { getRequest } from 'utils/fetchRequest';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n  backgroundColor: theme.palette.secondary.dark,\n  color: '#fff',\n  overflow: 'hidden',\n  position: 'relative',\n  '&>div': {\n    position: 'relative',\n    zIndex: 5\n  },\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: theme.palette.secondary[800],\n    borderRadius: '50%',\n    zIndex: 1,\n    top: -85,\n    right: -95,\n    [theme.breakpoints.down('sm')]: {\n      top: -105,\n      right: -140\n    }\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    zIndex: 1,\n    width: 210,\n    height: 210,\n    background: theme.palette.secondary[800],\n    borderRadius: '50%',\n    top: -125,\n    right: -15,\n    opacity: 0.5,\n    [theme.breakpoints.down('sm')]: {\n      top: -155,\n      right: -70\n    }\n  }\n}));\n\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nfunction TotalJobsLineChartCard() {\n  const theme = useTheme();\n  const [jobCardsStats, setJobCardsStats] = useState();\n  const [chartData, setChartData] = useState(ChartDataYear);\n  const [timeValue, setTimeValue] = useState('D');\n  const [displayFlag, setDisplayFlag] = useState(false);\n\n  useEffect(() => {\n    fetchJobCardsStats('D');\n    return () => {\n      setJobCardsStats();\n    };\n  }, []);\n\n  const fetchJobCardsStats = async (uri) => {\n    try {\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/totalJobCards/' + uri);\n      setJobCardsStats(data);\n      setChartData(data.chartData);\n      setDisplayFlag(true);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const handleChangeTime = (newValue) => {\n    switch (newValue) {\n      case 'D':\n        setDisplayFlag(false);\n        fetchJobCardsStats('D');\n        break;\n      case 'W':\n        setDisplayFlag(false);\n        fetchJobCardsStats('W');\n        break;\n      case 'M':\n        setDisplayFlag(false);\n        fetchJobCardsStats('M');\n        break;\n      case 'Y':\n        setDisplayFlag(false);\n        fetchJobCardsStats('Y');\n        break;\n      default:\n        setDisplayFlag(false);\n        fetchJobCardsStats('D');\n        break;\n    }\n    setTimeValue(newValue);\n  };\n\n  return (\n    <>\n      {/* {isLoading ? (\n        <SkeletonTotalOrderCard />\n      ) : ( */}\n      <CardWrapper border={false} content={false}>\n        <Box sx={{ p: 2.25 }}>\n          <Grid container direction=\"column\">\n            <Grid item>\n              <Grid container justifyContent=\"space-between\">\n                <Grid item>\n                  <Avatar\n                    variant=\"rounded\"\n                    sx={{\n                      ...theme.typography.commonAvatar,\n                      ...theme.typography.largeAvatar,\n                      backgroundColor: theme.palette.secondary[800],\n                      color: '#fff',\n                      mt: 1\n                    }}\n                  >\n                    <WorkHistoryIcon fontSize=\"inherit\" />\n                  </Avatar>\n                </Grid>\n                <Grid item>\n                  <Button\n                    disableElevation\n                    variant={timeValue === 'D' ? 'contained' : 'text'}\n                    size=\"small\"\n                    sx={{ color: 'inherit', mr: 1 }}\n                    onClick={() => handleChangeTime('D')}\n                  >\n                    Day\n                  </Button>\n                  <Button\n                    disableElevation\n                    variant={timeValue === 'W' ? 'contained' : 'text'}\n                    size=\"small\"\n                    sx={{ color: 'inherit', mr: 1 }}\n                    onClick={() => handleChangeTime('W')}\n                  >\n                    Week\n                  </Button>\n                  <Button\n                    disableElevation\n                    variant={timeValue === 'M' ? 'contained' : 'text'}\n                    size=\"small\"\n                    sx={{ color: 'inherit', mr: 1 }}\n                    onClick={() => handleChangeTime('M')}\n                  >\n                    Month\n                  </Button>\n                  <Button\n                    disableElevation\n                    variant={timeValue === 'Y' ? 'contained' : 'text'}\n                    size=\"small\"\n                    sx={{ color: 'inherit' }}\n                    onClick={() => handleChangeTime('Y')}\n                  >\n                    Year\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item sx={{ mb: 0.75 }}>\n              <Grid container alignItems=\"center\">\n                <Grid item xs={6}>\n                  <Grid container alignItems=\"center\">\n                    <Grid item>\n                      {displayFlag && (\n                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                          {jobCardsStats.totalJobCards}\n                        </Typography>\n                      )}\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography\n                        sx={{\n                          fontSize: '1rem',\n                          fontWeight: 500,\n                          color: theme.palette.secondary[200]\n                        }}\n                      >\n                        Total JobCards\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item xs={6}>\n                  {displayFlag && <Chart {...chartData} />}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Box>\n      </CardWrapper>\n      {/* )} */}\n    </>\n  );\n}\n\nTotalJobsLineChartCard.propTypes = {\n  isLoading: PropTypes.bool\n};\n\nexport default TotalJobsLineChartCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n//import TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport CurrencyRupeeIcon from '@mui/icons-material/CurrencyRupee';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.dark,\n  color: theme.palette.primary.light,\n  overflow: 'hidden',\n  position: 'relative',\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: `linear-gradient(210.04deg, ${theme.palette.primary[200]} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n    borderRadius: '50%',\n    top: -30,\n    right: -180\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: `linear-gradient(140.9deg, ${theme.palette.primary[200]} -14.02%, rgba(144, 202, 249, 0) 77.58%)`,\n    borderRadius: '50%',\n    top: -160,\n    right: -130\n  }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME DARK CARD ||============================== //\n\nconst TotalIncomeDarkCard = ({ totalRevenue, name }) => {\n  const theme = useTheme();\n\n  return (\n    <>\n      {/* {isLoading ? (\n        <TotalIncomeCard />\n      ) : ( */}\n      <CardWrapper border={false} content={false}>\n        <Box sx={{ p: 2 }}>\n          <List sx={{ py: 0 }}>\n            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n              <ListItemAvatar>\n                <Avatar\n                  variant=\"rounded\"\n                  sx={{\n                    ...theme.typography.commonAvatar,\n                    ...theme.typography.largeAvatar,\n                    backgroundColor: theme.palette.primary[800],\n                    color: '#fff'\n                  }}\n                >\n                  <CurrencyRupeeIcon fontSize=\"inherit\" />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                sx={{\n                  py: 0,\n                  mt: 0.45,\n                  mb: 0.45\n                }}\n                primary={\n                  <Typography variant=\"h4\" sx={{ color: '#fff' }}>\n                    {'₹ '}\n                    {totalRevenue}\n                  </Typography>\n                }\n                secondary={\n                  <Typography variant=\"subtitle2\" sx={{ color: 'primary.light', mt: 0.25 }}>\n                    {name}\n                  </Typography>\n                }\n              />\n            </ListItem>\n          </List>\n        </Box>\n      </CardWrapper>\n      {/* )} */}\n    </>\n  );\n};\n\nTotalIncomeDarkCard.propTypes = {\n  totalRevenue: PropTypes.number,\n  name: PropTypes.string\n};\n\nexport default TotalIncomeDarkCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n//import TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\n//import StorefrontTwoToneIcon from '@mui/icons-material/StorefrontTwoTone';\nimport EventNoteIcon from '@mui/icons-material/EventNote';\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n  backgroundColor: theme.palette.secondary.dark,\n  color: theme.palette.secondary.light,\n  overflow: 'hidden',\n  position: 'relative',\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: `linear-gradient(210.04deg, ${theme.palette.primary[200]} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n    borderRadius: '50%',\n    top: -30,\n    right: -180\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: `linear-gradient(140.9deg, ${theme.palette.primary[200]} -14.02%, rgba(144, 202, 249, 0) 77.58%)`,\n    borderRadius: '50%',\n    top: -160,\n    right: -130\n  }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME LIGHT CARD ||============================== //\n\nconst TotalIncomeLightCard = ({ totalJobCards, name }) => {\n  const theme = useTheme();\n\n  return (\n    <>\n      {/* {isLoading ? (\n        <TotalIncomeCard />\n      ) : ( */}\n      <CardWrapper border={false} content={false}>\n        <Box sx={{ p: 2 }}>\n          <List sx={{ py: 0 }}>\n            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n              <ListItemAvatar>\n                <Avatar\n                  variant=\"rounded\"\n                  sx={{\n                    ...theme.typography.commonAvatar,\n                    ...theme.typography.largeAvatar,\n                    backgroundColor: theme.palette.secondary[800],\n                    color: '#fff'\n                  }}\n                >\n                  <EventNoteIcon fontSize=\"inherit\" />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                sx={{\n                  py: 0,\n                  mt: 0.45,\n                  mb: 0.45\n                }}\n                primary={\n                  <Typography variant=\"h4\" sx={{ color: '#fff' }}>\n                    {totalJobCards}\n                  </Typography>\n                }\n                secondary={\n                  <Typography variant=\"subtitle2\" sx={{ color: 'secondary.light', mt: 0.25 }}>\n                    {name}\n                  </Typography>\n                }\n              />\n            </ListItem>\n          </List>\n        </Box>\n      </CardWrapper>\n      {/* )} */}\n    </>\n  );\n};\n\nTotalIncomeLightCard.propTypes = {\n  totalJobCards: PropTypes.number,\n  name: PropTypes.string\n};\n\nexport default TotalIncomeLightCard;\n","import React, { useState, useEffect } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport { Table, TableBody, TableCell, TableHead, TableRow, Grid, IconButton, Tooltip } from '@mui/material';\r\nimport { Delete } from '@mui/icons-material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport AlertDialog from 'views/utilities/AlertDialog';\r\nimport { getRequest, deleteRequest } from 'utils/fetchRequest';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  '&:after': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    width: 210,\r\n    height: 210,\r\n    background: `linear-gradient(210.04deg, ${theme.palette.success.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\r\n    borderRadius: '50%',\r\n    top: -30,\r\n    right: -180\r\n  },\r\n  '&:before': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    width: 210,\r\n    height: 210,\r\n    background: `linear-gradient(140.9deg, ${theme.palette.success.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\r\n    borderRadius: '50%',\r\n    top: -160,\r\n    right: -130\r\n  }\r\n}));\r\n\r\nfunction SparesEvents() {\r\n  const [sparesEventsList, setSparesEventsList] = useState([]);\r\n\r\n  const [showAlert, setShowAlert] = React.useState(false);\r\n  const [alertMess, setAlertMess] = React.useState('');\r\n  const [alertColor, setAlertColor] = React.useState('');\r\n\r\n  useEffect(() => {\r\n    fetchAllSparesEventsListData();\r\n\r\n    return () => {\r\n      setSparesEventsList([]);\r\n    };\r\n  }, []);\r\n\r\n  const fetchAllSparesEventsListData = async () => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/sparesEvents');\r\n      setSparesEventsList(data);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleRowDelete = async (id) => {\r\n    try {\r\n      const data = await deleteRequest(process.env.REACT_APP_API_URL + '/stats/sparesEvents/' + id);\r\n      setAlertMess('Spares Event deleted successfully');\r\n      setAlertColor('success');\r\n      setShowAlert(true);\r\n      setSparesEventsList(data);\r\n    } catch (err) {\r\n      setAlertMess(err.message);\r\n      setAlertColor('info');\r\n      setShowAlert(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CardWrapper border={false} content={false}>\r\n        <MainCard title=\"Spares Inventory Shortage\">\r\n          <Grid container direction=\"row\" spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n              <Grid item xs={12}>\r\n                <div style={{ overflowX: 'auto' }}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Shortage Events</TableCell>\r\n                        <TableCell>Event Time</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {sparesEventsList.map((row, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell>{row?.notif}</TableCell>\r\n                          <TableCell>{row?.time}</TableCell>\r\n                          <TableCell>\r\n                            <Tooltip arrow placement=\"right\" title=\"Delete\">\r\n                              <IconButton\r\n                                onClick={() => {\r\n                                  handleRowDelete(row.id);\r\n                                }}\r\n                              >\r\n                                <Delete />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </MainCard>\r\n      </CardWrapper>\r\n      {showAlert && <AlertDialog showAlert={showAlert} setShowAlert={setShowAlert} alertColor={alertColor} alertMess={alertMess} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SparesEvents;\r\n","// ===========================|| DASHBOARD - TOTAL GROWTH BAR CHART ||=========================== //\n\nconst chartData = {\n  height: 480,\n  type: 'bar',\n  options: {\n    chart: {\n      id: 'bar-chart',\n      stacked: true,\n      toolbar: {\n        show: true\n      },\n      zoom: {\n        enabled: true\n      }\n    },\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          legend: {\n            position: 'bottom',\n            offsetX: -10,\n            offsetY: 0\n          }\n        }\n      }\n    ],\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '50%'\n      }\n    },\n    xaxis: {\n      type: 'category',\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    },\n    legend: {\n      show: true,\n      fontSize: '14px',\n      fontFamily: `'Roboto', sans-serif`,\n      position: 'bottom',\n      offsetX: 20,\n      labels: {\n        useSeriesColors: false\n      },\n      markers: {\n        width: 16,\n        height: 16,\n        radius: 5\n      },\n      itemMargin: {\n        horizontal: 15,\n        vertical: 8\n      }\n    },\n    fill: {\n      type: 'solid'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    grid: {\n      show: true\n    }\n  },\n  series: [\n    {\n      name: 'Investment',\n      data: [35, 125, 35, 35, 35, 80, 35, 20, 35, 45, 15, 75]\n    },\n    {\n      name: 'Loss',\n      data: [35, 15, 15, 35, 65, 40, 80, 25, 15, 85, 25, 75]\n    },\n    {\n      name: 'Profit',\n      data: [35, 145, 35, 35, 20, 105, 100, 10, 65, 45, 30, 10]\n    },\n    {\n      name: 'Maintenance',\n      data: [0, 0, 75, 0, 0, 115, 0, 0, 0, 0, 150, 0]\n    }\n  ]\n};\nexport default chartData;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n//import { useSelector } from 'react-redux';\n\n// material-ui\n//import { useTheme } from '@mui/material/styles';\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material';\n\n// third-party\n//import ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\nimport dayjs from 'dayjs';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\n\n// chart data\nimport barchartData from './chart-data/total-growth-bar-chart';\nimport { getRequest } from 'utils/fetchRequest';\n\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\n\nconst TotalJobCardBarChart = ({ yearArray }) => {\n  const [testCasesStats, setTestCasesStats] = useState();\n  const [chartData, setChartData] = useState(barchartData);\n  const [timeValue, setTimeValue] = useState(dayjs().year().toString());\n  const [displayFlag, setDisplayFlag] = useState(false);\n\n  useEffect(() => {\n    fetchTestCasesStats(dayjs().year().toString());\n\n    return () => {\n      setTestCasesStats();\n    };\n  }, []);\n\n  const fetchTestCasesStats = async (uri) => {\n    try {\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/yearlyBarStatsJobCards/' + uri);\n      setTestCasesStats(data);\n      setChartData(data.chartData);\n      setDisplayFlag(true);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const handleChangeTime = (newValue) => {\n    setDisplayFlag(false);\n    fetchTestCasesStats(newValue);\n    setTimeValue(newValue);\n  };\n\n  return (\n    <>\n      <MainCard>\n        <Grid container spacing={gridSpacing}>\n          <Grid item xs={12}>\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n                <Grid container direction=\"column\" spacing={1}>\n                  <Grid item>\n                    <Typography variant=\"h2\">Total JobCards Completed</Typography>\n                  </Grid>\n                  <Grid item>{displayFlag && <Typography variant=\"h3\">{testCasesStats.totalTestCases}</Typography>}</Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <TextField id=\"standard-select-currency\" select value={timeValue} onChange={(e) => handleChangeTime(e.target.value)}>\n                  {yearArray.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            {displayFlag && <Chart {...chartData} />}\n          </Grid>\n        </Grid>\n      </MainCard>\n    </>\n  );\n};\n\nTotalJobCardBarChart.propTypes = {\n  yearArray: PropTypes.array\n};\n\nexport default TotalJobCardBarChart;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n//import { useSelector } from 'react-redux';\n\n// material-ui\n//import { useTheme } from '@mui/material/styles';\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material';\n\n// third-party\n//import ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\nimport dayjs from 'dayjs';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\n\n// chart data\nimport barchartData from './chart-data/total-growth-bar-chart';\nimport { getRequest } from 'utils/fetchRequest';\n\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\n\nconst TotalJobCardRevenueBarChart = ({ yearArray }) => {\n  const [testCasesStats, setTestCasesStats] = useState();\n  const [chartData, setChartData] = useState(barchartData);\n  const [timeValue, setTimeValue] = useState(dayjs().year().toString());\n  const [displayFlag, setDisplayFlag] = useState(false);\n\n  useEffect(() => {\n    fetchTestCasesStats(dayjs().year().toString());\n\n    return () => {\n      setTestCasesStats();\n    };\n  }, []);\n\n  const fetchTestCasesStats = async (uri) => {\n    try {\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/yearlyBarStatsTotalRevenue/' + uri);\n      setTestCasesStats(data);\n      setChartData(data.chartData);\n      setDisplayFlag(true);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const handleChangeTime = (newValue) => {\n    setDisplayFlag(false);\n    fetchTestCasesStats(newValue);\n    setTimeValue(newValue);\n  };\n\n  return (\n    <>\n      <MainCard>\n        <Grid container spacing={gridSpacing}>\n          <Grid item xs={12}>\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n                <Grid container direction=\"column\" spacing={1}>\n                  <Grid item>\n                    <Typography variant=\"h2\">Total Job Revenue</Typography>\n                  </Grid>\n                  <Grid item>{displayFlag && <Typography variant=\"h3\">{testCasesStats.totalTestCases}</Typography>}</Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <TextField id=\"standard-select-currency\" select value={timeValue} onChange={(e) => handleChangeTime(e.target.value)}>\n                  {yearArray.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            {displayFlag && <Chart {...chartData} />}\n          </Grid>\n        </Grid>\n      </MainCard>\n    </>\n  );\n};\n\nTotalJobCardRevenueBarChart.propTypes = {\n  yearArray: PropTypes.array\n};\n\nexport default TotalJobCardRevenueBarChart;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n//import { useSelector } from 'react-redux';\n\n// material-ui\n//import { useTheme } from '@mui/material/styles';\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material';\n\n// third-party\n//import ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\nimport dayjs from 'dayjs';\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\n\n// chart data\nimport barchartData from './chart-data/total-growth-bar-chart';\nimport { getRequest } from 'utils/fetchRequest';\n\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\n\nconst TotalJobRevenueSplitBarChart = ({ yearArray }) => {\n  const [testCasesStats, setTestCasesStats] = useState();\n  const [chartData, setChartData] = useState(barchartData);\n  const [timeValue, setTimeValue] = useState(dayjs().year().toString());\n  const [displayFlag, setDisplayFlag] = useState(false);\n\n  useEffect(() => {\n    fetchTestCasesStats(dayjs().year().toString());\n\n    return () => {\n      setTestCasesStats();\n    };\n  }, []);\n\n  const fetchTestCasesStats = async (uri) => {\n    try {\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/yearlyStatsEarningSplit/' + uri);\n      setTestCasesStats(data);\n      console.log(data);\n      setChartData(data.chartData);\n      setDisplayFlag(true);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const handleChangeTime = (newValue) => {\n    setDisplayFlag(false);\n    fetchTestCasesStats(newValue);\n    setTimeValue(newValue);\n  };\n\n  return (\n    <>\n      <MainCard>\n        <Grid container spacing={gridSpacing}>\n          <Grid item xs={12}>\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n                <Grid container direction=\"column\" spacing={1}>\n                  <Grid item>\n                    <Typography variant=\"h2\">Job Revenue Split</Typography>\n                  </Grid>\n                  <Grid item>{displayFlag && <Typography variant=\"h3\">{testCasesStats.totalTestCases}</Typography>}</Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <TextField id=\"standard-select-currency\" select value={timeValue} onChange={(e) => handleChangeTime(e.target.value)}>\n                  {yearArray.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            {displayFlag && <Chart {...chartData} />}\n          </Grid>\n        </Grid>\n      </MainCard>\n    </>\n  );\n};\n\nTotalJobRevenueSplitBarChart.propTypes = {\n  yearArray: PropTypes.array\n};\n\nexport default TotalJobRevenueSplitBarChart;\n","import { useEffect, useState } from 'react';\n\n// material-ui\nimport { Grid } from '@mui/material';\nimport dayjs from 'dayjs';\n\n// project imports\n//import EarningCard from './EarningCard';\n//import PopularCard from './PopularCard';\nimport TotalRevenueLineChartCard from './TotalRevenueLineChartCard';\nimport TotalJobsLineChartCard from './TotalJobsLineChartCard';\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\n//import TotalGrowthBarChart from './TotalGrowthBarChart';\nimport SparesEvents from './SparesEvents';\nimport { gridSpacing } from 'store/constant';\nimport TotalJobCardBarChart from './TotalJobCardBarChart';\nimport TotalJobCardRevenueBarChart from './TotalJobCardRevenueBarChart';\nimport TotalJobRevenueSplitBarChart from './TotalJobRevenueSplitBarChart';\n// ==============================|| DEFAULT DASHBOARD ||============================== //\nimport { getRequest } from 'utils/fetchRequest';\n\nconst currentYear = dayjs().year();\nconst yearArray = Array.from({ length: 6 }, (_, i) => {\n  const year = currentYear - i;\n  return {\n    value: year.toString(),\n    label: year.toString()\n  };\n});\n\nconst Dashboard = () => {\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  const [totalJobCards, setTotalJobCards] = useState(0);\n\n  const [displayFlag, setDisplayFlag] = useState(false);\n  const roles = JSON.parse(localStorage.getItem('roles') || '[]');\n\n  useEffect(() => {\n    fetchTotalRevenueData();\n    fetchTotalJobCardsData();\n  }, []);\n\n  const fetchTotalRevenueData = async () => {\n    try {\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/totalRevenue');\n      setTotalRevenue(data);\n      setDisplayFlag(true);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const fetchTotalJobCardsData = async () => {\n    try {\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/totalJobCards');\n      setTotalJobCards(data);\n      setDisplayFlag(true);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Grid container spacing={gridSpacing}>\n      <Grid item xs={12}>\n        <Grid container spacing={gridSpacing}>\n          <Grid item lg={4} md={12} sm={12} xs={12}>\n            <TotalJobsLineChartCard />\n          </Grid>\n          <Grid item lg={4} md={12} sm={12} xs={12}>\n            <Grid container spacing={gridSpacing}>\n              <Grid item sm={6} xs={12} md={6} lg={12}>\n                {displayFlag && <TotalIncomeLightCard totalJobCards={totalJobCards.total} name={'Total JobCards'} />}\n              </Grid>\n              <Grid item sm={6} xs={12} md={6} lg={12}>\n                {displayFlag && <TotalIncomeLightCard totalJobCards={totalJobCards.open} name={'Total Open JobCards'} />}\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item lg={4} md={12} sm={12} xs={12}>\n            <Grid container spacing={gridSpacing}>\n              <Grid item sm={6} xs={12} md={6} lg={12}>\n                {displayFlag && <TotalIncomeLightCard totalJobCards={totalJobCards.closed} name={'Total Closed JobCards'} />}\n              </Grid>\n              <Grid item sm={6} xs={12} md={6} lg={12}>\n                {displayFlag && <TotalIncomeLightCard totalJobCards={totalJobCards.cancelled} name={'Total Cancelled JobCards'} />}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      {roles.includes('ADMIN') && (\n        <>\n          <Grid item xs={12}>\n            <Grid container spacing={gridSpacing}>\n              <Grid item lg={4} md={12} sm={12} xs={12}>\n                <TotalRevenueLineChartCard />\n              </Grid>\n              <Grid item lg={4} md={12} sm={12} xs={12}>\n                <Grid container spacing={gridSpacing}>\n                  <Grid item sm={6} xs={12} md={6} lg={12}>\n                    {displayFlag && <TotalIncomeDarkCard totalRevenue={totalRevenue.total} name={'Total Income'} />}\n                  </Grid>\n                  <Grid item sm={6} xs={12} md={6} lg={12}>\n                    {displayFlag && <TotalIncomeDarkCard totalRevenue={totalRevenue.totalSparesWorth} name={'Total Spares Worth'} />}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item lg={4} md={12} sm={12} xs={12}>\n                <Grid container spacing={gridSpacing}>\n                  <Grid item sm={6} xs={12} md={6} lg={12}>\n                    {displayFlag && <TotalIncomeDarkCard totalRevenue={totalRevenue.spares} name={'Total Income From Spares'} />}\n                  </Grid>\n                  <Grid item sm={6} xs={12} md={6} lg={12}>\n                    {displayFlag && <TotalIncomeDarkCard totalRevenue={totalRevenue.labor} name={'Total Income From Labor'} />}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={6}>\n            <Grid container spacing={gridSpacing}>\n              <Grid item xs={12} md={12}>\n                <TotalJobRevenueSplitBarChart yearArray={yearArray} />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={6}>\n            <Grid container spacing={gridSpacing}>\n              <Grid item xs={12} md={12}>\n                <TotalJobCardRevenueBarChart yearArray={yearArray} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </>\n      )}\n      <Grid item xs={12}>\n        <Grid container spacing={gridSpacing}>\n          <Grid item xs={12} md={12}>\n            <TotalJobCardBarChart yearArray={yearArray} />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container spacing={gridSpacing}>\n          <Grid item xs={12} md={12}>\n            {/* <TotalGrowthBarChart isLoading={isLoading} /> */}\n            <SparesEvents></SparesEvents>\n          </Grid>\n          {/* <Grid item xs={12} md={4}>\n            <PopularCard isLoading={isLoading} />\n          </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Dashboard;\n"],"names":["type","height","options","chart","sparkline","enabled","dataLabels","colors","fill","opacity","stroke","curve","width","yaxis","min","max","tooltip","theme","fixed","x","show","y","title","marker","series","name","data","CardWrapper","styled","MainCard","_ref","backgroundColor","palette","primary","dark","color","overflow","position","zIndex","content","background","borderRadius","top","right","breakpoints","down","useTheme","revenueStats","setRevenueStats","useState","chartData","setChartData","ChartDataYear","timeValue","setTimeValue","displayFlag","setDisplayFlag","useEffect","fetchRevenueStats","async","getRequest","uri","err","console","error","message","handleChangeTime","newValue","_jsx","_Fragment","children","border","Box","sx","p","_jsxs","Grid","container","direction","item","justifyContent","Avatar","variant","typography","commonAvatar","largeAvatar","mt","CurrencyRupeeIcon","fontSize","Button","disableElevation","size","mr","onClick","mb","alignItems","xs","Typography","fontWeight","grandTotalSum","Chart","secondary","jobCardsStats","setJobCardsStats","fetchJobCardsStats","WorkHistoryIcon","totalJobCards","light","_ref2","totalRevenue","List","py","ListItem","disableGutters","ListItemAvatar","ListItemText","EventNoteIcon","success","sparesEventsList","setSparesEventsList","showAlert","setShowAlert","React","alertMess","setAlertMess","alertColor","setAlertColor","fetchAllSparesEventsListData","spacing","gridSpacing","style","overflowX","Table","TableHead","TableRow","TableCell","TableBody","map","row","index","notif","time","Tooltip","arrow","placement","IconButton","deleteRequest","id","handleRowDelete","Delete","AlertDialog","stacked","toolbar","zoom","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","horizontal","columnWidth","xaxis","categories","fontFamily","labels","useSeriesColors","markers","radius","itemMargin","vertical","grid","yearArray","testCasesStats","setTestCasesStats","barchartData","dayjs","year","toString","fetchTestCasesStats","totalTestCases","TextField","select","value","onChange","e","target","option","MenuItem","label","log","currentYear","Array","from","length","_","i","Dashboard","setTotalRevenue","setTotalJobCards","roles","JSON","parse","localStorage","getItem","fetchTotalRevenueData","fetchTotalJobCardsData","lg","md","sm","TotalJobsLineChartCard","TotalIncomeLightCard","total","open","closed","cancelled","includes","TotalRevenueLineChartCard","TotalIncomeDarkCard","totalSparesWorth","spares","labor","TotalJobRevenueSplitBarChart","TotalJobCardRevenueBarChart","TotalJobCardBarChart","SparesEvents"],"sourceRoot":""}