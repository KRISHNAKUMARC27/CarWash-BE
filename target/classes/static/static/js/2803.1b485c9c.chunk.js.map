{"version":3,"file":"static/js/2803.1b485c9c.chunk.js","mappings":"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","sources":["views/dashboard/Default/chart-data/total-order-year-line-chart.js","views/dashboard/Default/TotalRevenueLineChartCard.js","views/dashboard/Default/TotalJobsLineChartCard.js","views/dashboard/Default/TotalIncomeLightCard.js","views/dashboard/Default/SparesEvents.js","views/dashboard/Default/chart-data/total-growth-bar-chart.js","views/dashboard/Default/TotalJobCardBarChart.js","views/dashboard/Default/TotalJobCardRevenueBarChart.js","views/dashboard/Default/TotalJobRevenueSplitBarChart.js","views/dashboard/Default/TotalExpenseLineChartCard.js","views/dashboard/Default/index.js"],"sourcesContent":["// ===========================|| DASHBOARD - TOTAL ORDER YEAR CHART ||=========================== //\r\n\r\nconst chartData = {\r\n  type: 'line',\r\n  height: 90,\r\n  options: {\r\n    chart: {\r\n      sparkline: {\r\n        enabled: true\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    colors: ['#fff'],\r\n    fill: {\r\n      type: 'solid',\r\n      opacity: 1\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 3\r\n    },\r\n    yaxis: {\r\n      min: 2000,\r\n      max: 100000\r\n    },\r\n    tooltip: {\r\n      theme: 'dark',\r\n      fixed: {\r\n        enabled: false\r\n      },\r\n      x: {\r\n        show: false\r\n      },\r\n      y: {\r\n        title: 'Total Order'\r\n      },\r\n      marker: {\r\n        show: false\r\n      }\r\n    }\r\n  },\r\n  series: [\r\n    {\r\n      name: 'series1',\r\n      data: [0, 44, 9, 54, 45, 66, 41, 69]\r\n    }\r\n  ]\r\n};\r\n\r\nexport default chartData;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n//import SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\r\n\r\n//import ChartDataMonth from './chart-data/total-order-month-line-chart';\r\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\r\n\r\n// assets\r\nimport CurrencyRupeeIcon from '@mui/icons-material/CurrencyRupee';\r\n//import ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport { getRequest } from 'utils/fetchRequest';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.dark,\r\n  color: '#fff',\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  '&>div': {\r\n    position: 'relative',\r\n    zIndex: 5\r\n  },\r\n  '&:after': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    width: 210,\r\n    height: 210,\r\n    background: theme.palette.primary[800],\r\n    borderRadius: '50%',\r\n    zIndex: 1,\r\n    top: -85,\r\n    right: -95,\r\n    [theme.breakpoints.down('sm')]: {\r\n      top: -105,\r\n      right: -140\r\n    }\r\n  },\r\n  '&:before': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    width: 210,\r\n    height: 210,\r\n    background: theme.palette.primary[800],\r\n    borderRadius: '50%',\r\n    top: -125,\r\n    right: -15,\r\n    opacity: 0.5,\r\n    [theme.breakpoints.down('sm')]: {\r\n      top: -155,\r\n      right: -70\r\n    }\r\n  }\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\r\n\r\nfunction TotalRevenueLineChartCard() {\r\n  const theme = useTheme();\r\n  const [revenueStats, setRevenueStats] = useState();\r\n  const [chartData, setChartData] = useState(ChartDataYear);\r\n  const [timeValue, setTimeValue] = useState('D');\r\n  const [displayFlag, setDisplayFlag] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchRevenueStats('D');\r\n\r\n    return () => {\r\n      setRevenueStats();\r\n      // setChartData(ChartDataYear);\r\n      // setTimeValue('D');\r\n      // setDisplayFlag(true);\r\n    };\r\n  }, []);\r\n\r\n  const fetchRevenueStats = async (uri) => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/revenueEarnings/' + uri);\r\n      setRevenueStats(data);\r\n      setChartData(data.chartData);\r\n      setDisplayFlag(true);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleChangeTime = (newValue) => {\r\n    switch (newValue) {\r\n      case 'D':\r\n        setDisplayFlag(false);\r\n        fetchRevenueStats('D');\r\n        break;\r\n      case 'W':\r\n        setDisplayFlag(false);\r\n        fetchRevenueStats('W');\r\n        break;\r\n      case 'M':\r\n        setDisplayFlag(false);\r\n        fetchRevenueStats('M');\r\n        break;\r\n      case 'Y':\r\n        setDisplayFlag(false);\r\n        fetchRevenueStats('Y');\r\n        break;\r\n      default:\r\n        setDisplayFlag(false);\r\n        fetchRevenueStats('D');\r\n        break;\r\n    }\r\n    setTimeValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {isLoading ? (\r\n        <SkeletonTotalOrderCard />\r\n      ) : ( */}\r\n      <CardWrapper border={false} content={false}>\r\n        <Box sx={{ p: 2.25 }}>\r\n          <Grid container direction=\"column\">\r\n            <Grid item>\r\n              <Grid container justifyContent=\"space-between\">\r\n                <Grid item>\r\n                  <Avatar\r\n                    variant=\"rounded\"\r\n                    sx={{\r\n                      ...theme.typography.commonAvatar,\r\n                      ...theme.typography.largeAvatar,\r\n                      backgroundColor: theme.palette.primary[800],\r\n                      color: '#fff',\r\n                      mt: 1\r\n                    }}\r\n                  >\r\n                    <CurrencyRupeeIcon fontSize=\"inherit\" />\r\n                  </Avatar>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    disableElevation\r\n                    variant={timeValue === 'D' ? 'contained' : 'text'}\r\n                    size=\"small\"\r\n                    sx={{ color: 'inherit', mr: 1 }}\r\n                    onClick={() => handleChangeTime('D')}\r\n                  >\r\n                    Day\r\n                  </Button>\r\n                  <Button\r\n                    disableElevation\r\n                    variant={timeValue === 'W' ? 'contained' : 'text'}\r\n                    size=\"small\"\r\n                    sx={{ color: 'inherit', mr: 1 }}\r\n                    onClick={() => handleChangeTime('W')}\r\n                  >\r\n                    Week\r\n                  </Button>\r\n                  <Button\r\n                    disableElevation\r\n                    variant={timeValue === 'M' ? 'contained' : 'text'}\r\n                    size=\"small\"\r\n                    sx={{ color: 'inherit', mr: 1 }}\r\n                    onClick={() => handleChangeTime('M')}\r\n                  >\r\n                    Month\r\n                  </Button>\r\n                  <Button\r\n                    disableElevation\r\n                    variant={timeValue === 'Y' ? 'contained' : 'text'}\r\n                    size=\"small\"\r\n                    sx={{ color: 'inherit' }}\r\n                    onClick={() => handleChangeTime('Y')}\r\n                  >\r\n                    Year\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item sx={{ mb: 0.75 }}>\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item xs={6}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <Grid item>\r\n                      {displayFlag && (\r\n                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                          {/* {'₹ '}  */}\r\n                          {revenueStats.grandTotalSum}\r\n                        </Typography>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        sx={{\r\n                          fontSize: '1rem',\r\n                          fontWeight: 500,\r\n                          color: theme.palette.primary[200]\r\n                        }}\r\n                      >\r\n                        Total Revenue\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {displayFlag && <Chart {...chartData} />}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </CardWrapper>\r\n      {/* )} */}\r\n    </>\r\n  );\r\n}\r\n\r\nTotalRevenueLineChartCard.propTypes = {\r\n  isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalRevenueLineChartCard;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n//import SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\r\n\r\n//import ChartDataMonth from './chart-data/total-order-month-line-chart';\r\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\r\n\r\n// assets\r\nimport WorkHistoryIcon from '@mui/icons-material/WorkHistory';\r\n//import LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\r\n//import ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport { getRequest } from 'utils/fetchRequest';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n  backgroundColor: theme.palette.secondary.dark,\r\n  color: '#fff',\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  '&>div': {\r\n    position: 'relative',\r\n    zIndex: 5\r\n  },\r\n  '&:after': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    width: 210,\r\n    height: 210,\r\n    background: theme.palette.secondary[800],\r\n    borderRadius: '50%',\r\n    zIndex: 1,\r\n    top: -85,\r\n    right: -95,\r\n    [theme.breakpoints.down('sm')]: {\r\n      top: -105,\r\n      right: -140\r\n    }\r\n  },\r\n  '&:before': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    width: 210,\r\n    height: 210,\r\n    background: theme.palette.secondary[800],\r\n    borderRadius: '50%',\r\n    top: -125,\r\n    right: -15,\r\n    opacity: 0.5,\r\n    [theme.breakpoints.down('sm')]: {\r\n      top: -155,\r\n      right: -70\r\n    }\r\n  }\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\r\n\r\nfunction TotalJobsLineChartCard() {\r\n  const theme = useTheme();\r\n  const [jobCardsStats, setJobCardsStats] = useState();\r\n  const [chartData, setChartData] = useState(ChartDataYear);\r\n  const [timeValue, setTimeValue] = useState('D');\r\n  const [displayFlag, setDisplayFlag] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchJobCardsStats('D');\r\n    return () => {\r\n      setJobCardsStats();\r\n    };\r\n  }, []);\r\n\r\n  const fetchJobCardsStats = async (uri) => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/totalJobCards/' + uri);\r\n      setJobCardsStats(data);\r\n      setChartData(data.chartData);\r\n      setDisplayFlag(true);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleChangeTime = (newValue) => {\r\n    switch (newValue) {\r\n      case 'D':\r\n        setDisplayFlag(false);\r\n        fetchJobCardsStats('D');\r\n        break;\r\n      case 'W':\r\n        setDisplayFlag(false);\r\n        fetchJobCardsStats('W');\r\n        break;\r\n      case 'M':\r\n        setDisplayFlag(false);\r\n        fetchJobCardsStats('M');\r\n        break;\r\n      case 'Y':\r\n        setDisplayFlag(false);\r\n        fetchJobCardsStats('Y');\r\n        break;\r\n      default:\r\n        setDisplayFlag(false);\r\n        fetchJobCardsStats('D');\r\n        break;\r\n    }\r\n    setTimeValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {isLoading ? (\r\n        <SkeletonTotalOrderCard />\r\n      ) : ( */}\r\n      <CardWrapper border={false} content={false}>\r\n        <Box sx={{ p: 2.25 }}>\r\n          <Grid container direction=\"column\">\r\n            <Grid item>\r\n              <Grid container justifyContent=\"space-between\">\r\n                <Grid item>\r\n                  <Avatar\r\n                    variant=\"rounded\"\r\n                    sx={{\r\n                      ...theme.typography.commonAvatar,\r\n                      ...theme.typography.largeAvatar,\r\n                      backgroundColor: theme.palette.secondary[800],\r\n                      color: '#fff',\r\n                      mt: 1\r\n                    }}\r\n                  >\r\n                    <WorkHistoryIcon fontSize=\"inherit\" />\r\n                  </Avatar>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    disableElevation\r\n                    variant={timeValue === 'D' ? 'contained' : 'text'}\r\n                    size=\"small\"\r\n                    sx={{ color: 'inherit', mr: 1 }}\r\n                    onClick={() => handleChangeTime('D')}\r\n                  >\r\n                    Day\r\n                  </Button>\r\n                  <Button\r\n                    disableElevation\r\n                    variant={timeValue === 'W' ? 'contained' : 'text'}\r\n                    size=\"small\"\r\n                    sx={{ color: 'inherit', mr: 1 }}\r\n                    onClick={() => handleChangeTime('W')}\r\n                  >\r\n                    Week\r\n                  </Button>\r\n                  <Button\r\n                    disableElevation\r\n                    variant={timeValue === 'M' ? 'contained' : 'text'}\r\n                    size=\"small\"\r\n                    sx={{ color: 'inherit', mr: 1 }}\r\n                    onClick={() => handleChangeTime('M')}\r\n                  >\r\n                    Month\r\n                  </Button>\r\n                  <Button\r\n                    disableElevation\r\n                    variant={timeValue === 'Y' ? 'contained' : 'text'}\r\n                    size=\"small\"\r\n                    sx={{ color: 'inherit' }}\r\n                    onClick={() => handleChangeTime('Y')}\r\n                  >\r\n                    Year\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item sx={{ mb: 0.75 }}>\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item xs={6}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <Grid item>\r\n                      {displayFlag && (\r\n                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                          {jobCardsStats.totalJobCards}\r\n                        </Typography>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        sx={{\r\n                          fontSize: '1rem',\r\n                          fontWeight: 500,\r\n                          color: theme.palette.secondary[200]\r\n                        }}\r\n                      >\r\n                        Total JobCards\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {displayFlag && <Chart {...chartData} />}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </CardWrapper>\r\n      {/* )} */}\r\n    </>\r\n  );\r\n}\r\n\r\nTotalJobsLineChartCard.propTypes = {\r\n  isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalJobsLineChartCard;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n//import TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\r\n\r\n// assets\r\n//import StorefrontTwoToneIcon from '@mui/icons-material/StorefrontTwoTone';\r\nimport EventNoteIcon from '@mui/icons-material/EventNote';\r\n// styles\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n  backgroundColor: theme.palette.secondary.dark,\r\n  color: theme.palette.secondary.light,\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  '&:after': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    width: 210,\r\n    height: 210,\r\n    background: `linear-gradient(210.04deg, ${theme.palette.primary[200]} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\r\n    borderRadius: '50%',\r\n    top: -30,\r\n    right: -180\r\n  },\r\n  '&:before': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    width: 210,\r\n    height: 210,\r\n    background: `linear-gradient(140.9deg, ${theme.palette.primary[200]} -14.02%, rgba(144, 202, 249, 0) 77.58%)`,\r\n    borderRadius: '50%',\r\n    top: -160,\r\n    right: -130\r\n  }\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL INCOME LIGHT CARD ||============================== //\r\n\r\nconst TotalIncomeLightCard = ({ totalJobCards, name }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      {/* {isLoading ? (\r\n        <TotalIncomeCard />\r\n      ) : ( */}\r\n      <CardWrapper border={false} content={false}>\r\n        <Box sx={{ p: 2 }}>\r\n          <List sx={{ py: 0 }}>\r\n            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  variant=\"rounded\"\r\n                  sx={{\r\n                    ...theme.typography.commonAvatar,\r\n                    ...theme.typography.largeAvatar,\r\n                    backgroundColor: theme.palette.secondary[800],\r\n                    color: '#fff'\r\n                  }}\r\n                >\r\n                  <EventNoteIcon fontSize=\"inherit\" />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                sx={{\r\n                  py: 0,\r\n                  mt: 0.45,\r\n                  mb: 0.45\r\n                }}\r\n                primary={\r\n                  <Typography variant=\"h4\" sx={{ color: '#fff' }}>\r\n                    {totalJobCards}\r\n                  </Typography>\r\n                }\r\n                secondary={\r\n                  <Typography variant=\"subtitle2\" sx={{ color: 'secondary.light', mt: 0.25 }}>\r\n                    {name}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          </List>\r\n        </Box>\r\n      </CardWrapper>\r\n      {/* )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nTotalIncomeLightCard.propTypes = {\r\n  totalJobCards: PropTypes.number,\r\n  name: PropTypes.string\r\n};\r\n\r\nexport default TotalIncomeLightCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport { Table, TableBody, TableCell, TableHead, TableRow, Grid, IconButton, Tooltip } from '@mui/material';\r\nimport { Delete } from '@mui/icons-material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport AlertDialog from 'views/utilities/AlertDialog';\r\nimport { getRequest, deleteRequest } from 'utils/fetchRequest';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  '&:after': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    width: 210,\r\n    height: 210,\r\n    background: `linear-gradient(210.04deg, ${theme.palette.success.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\r\n    borderRadius: '50%',\r\n    top: -30,\r\n    right: -180\r\n  },\r\n  '&:before': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    width: 210,\r\n    height: 210,\r\n    background: `linear-gradient(140.9deg, ${theme.palette.success.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\r\n    borderRadius: '50%',\r\n    top: -160,\r\n    right: -130\r\n  }\r\n}));\r\n\r\nfunction SparesEvents() {\r\n  const [sparesEventsList, setSparesEventsList] = useState([]);\r\n\r\n  const [showAlert, setShowAlert] = React.useState(false);\r\n  const [alertMess, setAlertMess] = React.useState('');\r\n  const [alertColor, setAlertColor] = React.useState('');\r\n\r\n  useEffect(() => {\r\n    fetchAllSparesEventsListData();\r\n\r\n    return () => {\r\n      setSparesEventsList([]);\r\n    };\r\n  }, []);\r\n\r\n  const fetchAllSparesEventsListData = async () => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/sparesEvents');\r\n      setSparesEventsList(data);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleRowDelete = async (id) => {\r\n    try {\r\n      const data = await deleteRequest(process.env.REACT_APP_API_URL + '/stats/sparesEvents/' + id);\r\n      setAlertMess('Spares Event deleted successfully');\r\n      setAlertColor('success');\r\n      setShowAlert(true);\r\n      setSparesEventsList(data);\r\n    } catch (err) {\r\n      setAlertMess(err.message);\r\n      setAlertColor('info');\r\n      setShowAlert(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CardWrapper border={false} content={false}>\r\n        <MainCard title=\"Spares Inventory Shortage\">\r\n          <Grid container direction=\"row\" spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n              <Grid item xs={12}>\r\n                <div style={{ overflowX: 'auto' }}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Shortage Events</TableCell>\r\n                        <TableCell>Event Time</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {sparesEventsList.map((row, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell>{row?.notif}</TableCell>\r\n                          <TableCell>{row?.time}</TableCell>\r\n                          <TableCell>\r\n                            <Tooltip arrow placement=\"right\" title=\"Delete\">\r\n                              <IconButton\r\n                                onClick={() => {\r\n                                  handleRowDelete(row.id);\r\n                                }}\r\n                              >\r\n                                <Delete />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </MainCard>\r\n      </CardWrapper>\r\n      {showAlert && <AlertDialog showAlert={showAlert} setShowAlert={setShowAlert} alertColor={alertColor} alertMess={alertMess} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SparesEvents;\r\n","// ===========================|| DASHBOARD - TOTAL GROWTH BAR CHART ||=========================== //\r\n\r\nconst chartData = {\r\n  height: 480,\r\n  type: 'bar',\r\n  options: {\r\n    chart: {\r\n      id: 'bar-chart',\r\n      stacked: true,\r\n      toolbar: {\r\n        show: true\r\n      },\r\n      zoom: {\r\n        enabled: true\r\n      }\r\n    },\r\n    responsive: [\r\n      {\r\n        breakpoint: 480,\r\n        options: {\r\n          legend: {\r\n            position: 'bottom',\r\n            offsetX: -10,\r\n            offsetY: 0\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: '50%'\r\n      }\r\n    },\r\n    xaxis: {\r\n      type: 'category',\r\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    },\r\n    legend: {\r\n      show: true,\r\n      fontSize: '14px',\r\n      fontFamily: `'Roboto', sans-serif`,\r\n      position: 'bottom',\r\n      offsetX: 20,\r\n      labels: {\r\n        useSeriesColors: false\r\n      },\r\n      markers: {\r\n        width: 16,\r\n        height: 16,\r\n        radius: 5\r\n      },\r\n      itemMargin: {\r\n        horizontal: 15,\r\n        vertical: 8\r\n      }\r\n    },\r\n    fill: {\r\n      type: 'solid'\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    grid: {\r\n      show: true\r\n    }\r\n  },\r\n  series: [\r\n    {\r\n      name: 'Investment',\r\n      data: [35, 125, 35, 35, 35, 80, 35, 20, 35, 45, 15, 75]\r\n    },\r\n    {\r\n      name: 'Loss',\r\n      data: [35, 15, 15, 35, 65, 40, 80, 25, 15, 85, 25, 75]\r\n    },\r\n    {\r\n      name: 'Profit',\r\n      data: [35, 145, 35, 35, 20, 105, 100, 10, 65, 45, 30, 10]\r\n    },\r\n    {\r\n      name: 'Maintenance',\r\n      data: [0, 0, 75, 0, 0, 115, 0, 0, 0, 0, 150, 0]\r\n    }\r\n  ]\r\n};\r\nexport default chartData;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n//import { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\n//import { useTheme } from '@mui/material/styles';\r\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material';\r\n\r\n// third-party\r\n//import ApexCharts from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\nimport dayjs from 'dayjs';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// chart data\r\nimport barchartData from './chart-data/total-growth-bar-chart';\r\nimport { getRequest } from 'utils/fetchRequest';\r\n\r\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst TotalJobCardBarChart = ({ yearArray }) => {\r\n  const [testCasesStats, setTestCasesStats] = useState();\r\n  const [chartData, setChartData] = useState(barchartData);\r\n  const [timeValue, setTimeValue] = useState(dayjs().year().toString());\r\n  const [displayFlag, setDisplayFlag] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchTestCasesStats(dayjs().year().toString());\r\n\r\n    return () => {\r\n      setTestCasesStats();\r\n    };\r\n  }, []);\r\n\r\n  const fetchTestCasesStats = async (uri) => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/yearlyBarStatsJobCards/' + uri);\r\n      setTestCasesStats(data);\r\n      setChartData(data.chartData);\r\n      setDisplayFlag(true);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleChangeTime = (newValue) => {\r\n    setDisplayFlag(false);\r\n    fetchTestCasesStats(newValue);\r\n    setTimeValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainCard>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={12}>\r\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Grid item>\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                  <Grid item>\r\n                    <Typography variant=\"h2\">Total JobCards Completed</Typography>\r\n                  </Grid>\r\n                  <Grid item>{displayFlag && <Typography variant=\"h3\">{testCasesStats.totalTestCases}</Typography>}</Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField id=\"standard-select-currency\" select value={timeValue} onChange={(e) => handleChangeTime(e.target.value)}>\r\n                  {yearArray.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {displayFlag && <Chart {...chartData} />}\r\n          </Grid>\r\n        </Grid>\r\n      </MainCard>\r\n    </>\r\n  );\r\n};\r\n\r\nTotalJobCardBarChart.propTypes = {\r\n  yearArray: PropTypes.array\r\n};\r\n\r\nexport default TotalJobCardBarChart;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n//import { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\n//import { useTheme } from '@mui/material/styles';\r\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material';\r\n\r\n// third-party\r\n//import ApexCharts from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\nimport dayjs from 'dayjs';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// chart data\r\nimport barchartData from './chart-data/total-growth-bar-chart';\r\nimport { getRequest } from 'utils/fetchRequest';\r\n\r\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst TotalJobCardRevenueBarChart = ({ yearArray }) => {\r\n  const [testCasesStats, setTestCasesStats] = useState();\r\n  const [chartData, setChartData] = useState(barchartData);\r\n  const [timeValue, setTimeValue] = useState(dayjs().year().toString());\r\n  const [displayFlag, setDisplayFlag] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchTestCasesStats(dayjs().year().toString());\r\n\r\n    return () => {\r\n      setTestCasesStats();\r\n    };\r\n  }, []);\r\n\r\n  const fetchTestCasesStats = async (uri) => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/yearlyBarStatsTotalRevenue/' + uri);\r\n      setTestCasesStats(data);\r\n      setChartData(data.chartData);\r\n      setDisplayFlag(true);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleChangeTime = (newValue) => {\r\n    setDisplayFlag(false);\r\n    fetchTestCasesStats(newValue);\r\n    setTimeValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainCard>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={12}>\r\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Grid item>\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                  <Grid item>\r\n                    <Typography variant=\"h2\">Total Job Revenue</Typography>\r\n                  </Grid>\r\n                  <Grid item>{displayFlag && <Typography variant=\"h3\">{testCasesStats.totalTestCases}</Typography>}</Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField id=\"standard-select-currency\" select value={timeValue} onChange={(e) => handleChangeTime(e.target.value)}>\r\n                  {yearArray.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {displayFlag && <Chart {...chartData} />}\r\n          </Grid>\r\n        </Grid>\r\n      </MainCard>\r\n    </>\r\n  );\r\n};\r\n\r\nTotalJobCardRevenueBarChart.propTypes = {\r\n  yearArray: PropTypes.array\r\n};\r\n\r\nexport default TotalJobCardRevenueBarChart;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n//import { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\n//import { useTheme } from '@mui/material/styles';\r\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material';\r\n\r\n// third-party\r\n//import ApexCharts from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\nimport dayjs from 'dayjs';\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// chart data\r\nimport barchartData from './chart-data/total-growth-bar-chart';\r\nimport { getRequest } from 'utils/fetchRequest';\r\n\r\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst TotalJobRevenueSplitBarChart = ({ yearArray }) => {\r\n  const [testCasesStats, setTestCasesStats] = useState();\r\n  const [chartData, setChartData] = useState(barchartData);\r\n  const [timeValue, setTimeValue] = useState(dayjs().year().toString());\r\n  const [displayFlag, setDisplayFlag] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchTestCasesStats(dayjs().year().toString());\r\n\r\n    return () => {\r\n      setTestCasesStats();\r\n    };\r\n  }, []);\r\n\r\n  const fetchTestCasesStats = async (uri) => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/yearlyStatsEarningSplit/' + uri);\r\n      setTestCasesStats(data);\r\n      console.log(data);\r\n      setChartData(data.chartData);\r\n      setDisplayFlag(true);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleChangeTime = (newValue) => {\r\n    setDisplayFlag(false);\r\n    fetchTestCasesStats(newValue);\r\n    setTimeValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainCard>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={12}>\r\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Grid item>\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                  <Grid item>\r\n                    <Typography variant=\"h2\">Job Revenue Split</Typography>\r\n                  </Grid>\r\n                  <Grid item>{displayFlag && <Typography variant=\"h3\">{testCasesStats.totalTestCases}</Typography>}</Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField id=\"standard-select-currency\" select value={timeValue} onChange={(e) => handleChangeTime(e.target.value)}>\r\n                  {yearArray.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {displayFlag && <Chart {...chartData} />}\r\n          </Grid>\r\n        </Grid>\r\n      </MainCard>\r\n    </>\r\n  );\r\n};\r\n\r\nTotalJobRevenueSplitBarChart.propTypes = {\r\n  yearArray: PropTypes.array\r\n};\r\n\r\nexport default TotalJobRevenueSplitBarChart;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n//import SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\r\n\r\n//import ChartDataMonth from './chart-data/total-order-month-line-chart';\r\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\r\n\r\n// assets\r\nimport CurrencyRupeeIcon from '@mui/icons-material/CurrencyRupee';\r\n//import ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport { getRequest } from 'utils/fetchRequest';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.dark,\r\n  color: '#fff',\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  '&>div': {\r\n    position: 'relative',\r\n    zIndex: 5\r\n  },\r\n  '&:after': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    width: 210,\r\n    height: 210,\r\n    background: theme.palette.primary[800],\r\n    borderRadius: '50%',\r\n    zIndex: 1,\r\n    top: -85,\r\n    right: -95,\r\n    [theme.breakpoints.down('sm')]: {\r\n      top: -105,\r\n      right: -140\r\n    }\r\n  },\r\n  '&:before': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    width: 210,\r\n    height: 210,\r\n    background: theme.palette.primary[800],\r\n    borderRadius: '50%',\r\n    top: -125,\r\n    right: -15,\r\n    opacity: 0.5,\r\n    [theme.breakpoints.down('sm')]: {\r\n      top: -155,\r\n      right: -70\r\n    }\r\n  }\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\r\n\r\nfunction TotalExpenseLineChartCard() {\r\n  const theme = useTheme();\r\n  const [expenseStats, setExpenseStats] = useState();\r\n  const [chartData, setChartData] = useState(ChartDataYear);\r\n  const [timeValue, setTimeValue] = useState('D');\r\n  const [displayFlag, setDisplayFlag] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchExpenseStats('D');\r\n\r\n    return () => {\r\n      setExpenseStats();\r\n    };\r\n  }, []);\r\n\r\n  const fetchExpenseStats = async (uri) => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/revenueExpenses/' + uri);\r\n      setExpenseStats(data);\r\n      setChartData(data.chartData);\r\n      setDisplayFlag(true);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleChangeTime = (newValue) => {\r\n    switch (newValue) {\r\n      case 'D':\r\n        setDisplayFlag(false);\r\n        fetchExpenseStats('D');\r\n        break;\r\n      case 'W':\r\n        setDisplayFlag(false);\r\n        fetchExpenseStats('W');\r\n        break;\r\n      case 'M':\r\n        setDisplayFlag(false);\r\n        fetchExpenseStats('M');\r\n        break;\r\n      case 'Y':\r\n        setDisplayFlag(false);\r\n        fetchExpenseStats('Y');\r\n        break;\r\n      default:\r\n        setDisplayFlag(false);\r\n        fetchExpenseStats('D');\r\n        break;\r\n    }\r\n    setTimeValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {isLoading ? (\r\n        <SkeletonTotalOrderCard />\r\n      ) : ( */}\r\n      <CardWrapper border={false} content={false}>\r\n        <Box sx={{ p: 2.25 }}>\r\n          <Grid container direction=\"column\">\r\n            <Grid item>\r\n              <Grid container justifyContent=\"space-between\">\r\n                <Grid item>\r\n                  <Avatar\r\n                    variant=\"rounded\"\r\n                    sx={{\r\n                      ...theme.typography.commonAvatar,\r\n                      ...theme.typography.largeAvatar,\r\n                      backgroundColor: theme.palette.primary[800],\r\n                      color: '#fff',\r\n                      mt: 1\r\n                    }}\r\n                  >\r\n                    <CurrencyRupeeIcon fontSize=\"inherit\" />\r\n                  </Avatar>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    disableElevation\r\n                    variant={timeValue === 'D' ? 'contained' : 'text'}\r\n                    size=\"small\"\r\n                    sx={{ color: 'inherit', mr: 1 }}\r\n                    onClick={() => handleChangeTime('D')}\r\n                  >\r\n                    Day\r\n                  </Button>\r\n                  <Button\r\n                    disableElevation\r\n                    variant={timeValue === 'W' ? 'contained' : 'text'}\r\n                    size=\"small\"\r\n                    sx={{ color: 'inherit', mr: 1 }}\r\n                    onClick={() => handleChangeTime('W')}\r\n                  >\r\n                    Week\r\n                  </Button>\r\n                  <Button\r\n                    disableElevation\r\n                    variant={timeValue === 'M' ? 'contained' : 'text'}\r\n                    size=\"small\"\r\n                    sx={{ color: 'inherit', mr: 1 }}\r\n                    onClick={() => handleChangeTime('M')}\r\n                  >\r\n                    Month\r\n                  </Button>\r\n                  <Button\r\n                    disableElevation\r\n                    variant={timeValue === 'Y' ? 'contained' : 'text'}\r\n                    size=\"small\"\r\n                    sx={{ color: 'inherit' }}\r\n                    onClick={() => handleChangeTime('Y')}\r\n                  >\r\n                    Year\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item sx={{ mb: 0.75 }}>\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item xs={6}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <Grid item>\r\n                      {displayFlag && (\r\n                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                          {/* {'₹ '}  */}\r\n                          {expenseStats.grandTotalSum}\r\n                        </Typography>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        sx={{\r\n                          fontSize: '1rem',\r\n                          fontWeight: 500,\r\n                          color: theme.palette.primary[200]\r\n                        }}\r\n                      >\r\n                        Total Expenses\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {displayFlag && <Chart {...chartData} />}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </CardWrapper>\r\n      {/* )} */}\r\n    </>\r\n  );\r\n}\r\n\r\nTotalExpenseLineChartCard.propTypes = {\r\n  isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalExpenseLineChartCard;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Divider\r\n} from '@mui/material';\r\nimport dayjs from 'dayjs';\r\n\r\n// project imports\r\n//import EarningCard from './EarningCard';\r\n//import PopularCard from './PopularCard';\r\nimport TotalRevenueLineChartCard from './TotalRevenueLineChartCard';\r\nimport TotalJobsLineChartCard from './TotalJobsLineChartCard';\r\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\r\n//import TotalGrowthBarChart from './TotalGrowthBarChart';\r\nimport SparesEvents from './SparesEvents';\r\nimport { gridSpacing } from 'store/constant';\r\nimport TotalJobCardBarChart from './TotalJobCardBarChart';\r\nimport TotalJobCardRevenueBarChart from './TotalJobCardRevenueBarChart';\r\nimport TotalJobRevenueSplitBarChart from './TotalJobRevenueSplitBarChart';\r\n// ==============================|| DEFAULT DASHBOARD ||============================== //\r\nimport { getRequest } from 'utils/fetchRequest';\r\nimport Loadable from 'ui-component/Loadable';\r\nimport { lazy } from 'react';\r\nimport TotalExpenseLineChartCard from './TotalExpenseLineChartCard';\r\nconst AppointmentCreate = Loadable(lazy(() => import('views/appointment/AppointmentCreate')));\r\n\r\nconst currentYear = dayjs().year();\r\nconst yearArray = Array.from({ length: 6 }, (_, i) => {\r\n  const year = currentYear - i;\r\n  return {\r\n    value: year.toString(),\r\n    label: year.toString()\r\n  };\r\n});\r\n\r\nconst Dashboard = () => {\r\n  const [totalJobCards, setTotalJobCards] = useState(0);\r\n  const [upcomingAppointments, setUpcomingAppointments] = useState([]);\r\n\r\n  const [displayFlag, setDisplayFlag] = useState(false);\r\n  const roles = JSON.parse(localStorage.getItem('roles') || '[]');\r\n\r\n  const [appointment, setAppointment] = useState({});\r\n  const [appointmentUpdateOpen, setAppointmentUpdateOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchTotalJobCardsData();\r\n    fetchUpcomingAppointmentsData();\r\n  }, []);\r\n\r\n  const fetchTotalJobCardsData = async () => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/stats/totalJobCards');\r\n      setTotalJobCards(data);\r\n      setDisplayFlag(true);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const fetchUpcomingAppointmentsData = async () => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/appointments/upcoming');\r\n      setUpcomingAppointments(data);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleRowClick = (appointment) => {\r\n    setAppointment(appointment);\r\n    setAppointmentUpdateOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAppointmentUpdateOpen(false);\r\n  };\r\n\r\n  const renderAppointmentsTable = () => (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Appointment Date & Time</TableCell>\r\n            <TableCell>Customer Name</TableCell>\r\n            <TableCell>Phone</TableCell>\r\n            <TableCell>Service</TableCell>\r\n            <TableCell>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {upcomingAppointments.map((appointment) => (\r\n            <TableRow key={appointment.id} onClick={() => handleRowClick(appointment)} style={{ cursor: 'pointer' }}>\r\n              <TableCell>{appointment.appointmentDateTime}</TableCell>\r\n              <TableCell>{appointment.customerName}</TableCell>\r\n              <TableCell>{appointment.phone}</TableCell>\r\n              <TableCell>{appointment.service}</TableCell>\r\n              <TableCell>{appointment.status}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={gridSpacing}>\r\n        {upcomingAppointments.length > 0 && (\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h4\">Upcoming Appointments</Typography>\r\n            {renderAppointmentsTable()}\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={gridSpacing}>\r\n            <Grid item lg={4} md={12} sm={12} xs={12}>\r\n              <TotalJobsLineChartCard />\r\n            </Grid>\r\n            <Grid item lg={4} md={12} sm={12} xs={12}>\r\n              <Grid container spacing={gridSpacing}>\r\n                <Grid item sm={6} xs={12} md={6} lg={12}>\r\n                  {displayFlag && <TotalIncomeLightCard totalJobCards={totalJobCards.total} name={'Total JobCards'} />}\r\n                </Grid>\r\n                <Grid item sm={6} xs={12} md={6} lg={12}>\r\n                  {displayFlag && <TotalIncomeLightCard totalJobCards={totalJobCards.open} name={'Total Open JobCards'} />}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item lg={4} md={12} sm={12} xs={12}>\r\n              <Grid container spacing={gridSpacing}>\r\n                <Grid item sm={6} xs={12} md={6} lg={12}>\r\n                  {displayFlag && <TotalIncomeLightCard totalJobCards={totalJobCards.closed} name={'Total Closed JobCards'} />}\r\n                </Grid>\r\n                <Grid item sm={6} xs={12} md={6} lg={12}>\r\n                  {displayFlag && <TotalIncomeLightCard totalJobCards={totalJobCards.cancelled} name={'Total Cancelled JobCards'} />}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {roles.includes('ADMIN') && (\r\n          <>\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={gridSpacing}>\r\n                <Grid item lg={4} md={12} sm={12} xs={12}>\r\n                  <TotalRevenueLineChartCard />\r\n                </Grid>\r\n                <Grid item lg={4} md={12} sm={12} xs={12}>\r\n                  <TotalExpenseLineChartCard />\r\n                </Grid>\r\n                <Grid item lg={4} md={12} sm={12} xs={12}></Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12} md={12}>\r\n                  <TotalJobRevenueSplitBarChart yearArray={yearArray} />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12} md={12}>\r\n                  <TotalJobCardRevenueBarChart yearArray={yearArray} />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )}\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12} md={12}>\r\n              <TotalJobCardBarChart yearArray={yearArray} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12} md={12}>\r\n              {/* <TotalGrowthBarChart isLoading={isLoading} /> */}\r\n              <SparesEvents></SparesEvents>\r\n            </Grid>\r\n            {/* <Grid item xs={12} md={4}>\r\n            <PopularCard isLoading={isLoading} />\r\n          </Grid> */}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12} md={12}>\r\n              {renderAppointmentsTable()}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog open={appointmentUpdateOpen} onClose={handleClose} aria-labelledby=\"data-row-dialog-title\" fullWidth maxWidth=\"lg\">\r\n        <DialogContent dividers style={{ backgroundColor: 'white', color: 'black' }}>\r\n          {' '}\r\n          <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                  <Divider />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h2\">{'Updating Appointment: ' + appointment.customerName}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <AppointmentCreate\r\n                    data={appointment}\r\n                    setAppointmentUpdateOpen={setAppointmentUpdateOpen}\r\n                    fetchAllAppointmentData={fetchUpcomingAppointmentsData}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["type","height","options","chart","sparkline","enabled","dataLabels","colors","fill","opacity","stroke","curve","width","yaxis","min","max","tooltip","theme","fixed","x","show","y","title","marker","series","name","data","CardWrapper","styled","MainCard","_ref","backgroundColor","palette","primary","dark","color","overflow","position","zIndex","content","background","borderRadius","top","right","breakpoints","down","useTheme","revenueStats","setRevenueStats","useState","chartData","setChartData","ChartDataYear","timeValue","setTimeValue","displayFlag","setDisplayFlag","useEffect","fetchRevenueStats","async","getRequest","uri","err","console","error","message","handleChangeTime","newValue","_jsx","_Fragment","children","border","Box","sx","p","_jsxs","Grid","container","direction","item","justifyContent","Avatar","variant","typography","commonAvatar","largeAvatar","mt","CurrencyRupeeIcon","fontSize","Button","disableElevation","size","mr","onClick","mb","alignItems","xs","Typography","fontWeight","grandTotalSum","Chart","secondary","jobCardsStats","setJobCardsStats","fetchJobCardsStats","WorkHistoryIcon","totalJobCards","light","_ref2","List","py","ListItem","disableGutters","ListItemAvatar","EventNoteIcon","ListItemText","success","sparesEventsList","setSparesEventsList","showAlert","setShowAlert","React","alertMess","setAlertMess","alertColor","setAlertColor","fetchAllSparesEventsListData","spacing","gridSpacing","style","overflowX","Table","TableHead","TableRow","TableCell","TableBody","map","row","index","notif","time","Tooltip","arrow","placement","IconButton","deleteRequest","id","handleRowDelete","Delete","AlertDialog","stacked","toolbar","zoom","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","horizontal","columnWidth","xaxis","categories","fontFamily","labels","useSeriesColors","markers","radius","itemMargin","vertical","grid","yearArray","testCasesStats","setTestCasesStats","barchartData","dayjs","year","toString","fetchTestCasesStats","totalTestCases","TextField","select","value","onChange","e","target","option","MenuItem","label","log","expenseStats","setExpenseStats","fetchExpenseStats","AppointmentCreate","Loadable","lazy","currentYear","Array","from","length","_","i","Dashboard","setTotalJobCards","upcomingAppointments","setUpcomingAppointments","roles","JSON","parse","localStorage","getItem","appointment","setAppointment","appointmentUpdateOpen","setAppointmentUpdateOpen","fetchTotalJobCardsData","fetchUpcomingAppointmentsData","handleClose","renderAppointmentsTable","TableContainer","component","Paper","handleRowClick","cursor","appointmentDateTime","customerName","phone","service","status","lg","md","sm","TotalJobsLineChartCard","TotalIncomeLightCard","total","open","closed","cancelled","includes","TotalRevenueLineChartCard","TotalExpenseLineChartCard","TotalJobRevenueSplitBarChart","TotalJobCardRevenueBarChart","TotalJobCardBarChart","SparesEvents","Dialog","onClose","fullWidth","maxWidth","DialogContent","dividers","Divider","fetchAllAppointmentData","DialogActions"],"sourceRoot":""}