{"version":3,"file":"static/js/2509.eadb826c.chunk.js","mappings":"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","sources":["views/employee/Department.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { Table, TableBody, TableCell, TableHead, TableRow, Button, TextField, Grid, IconButton, Tooltip } from '@mui/material';\r\nimport { Edit, Delete } from '@mui/icons-material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport AlertDialog from 'views/utilities/AlertDialog';\r\nimport { getRequest, deleteRequest, postRequest, putRequestNotStringify } from 'utils/fetchRequest';\r\n\r\nfunction Department() {\r\n  const [department, setDepartment] = useState({});\r\n  const [departmentList, setDepartmentList] = useState([]);\r\n  const [oldDepartment, setOldDepartment] = useState('');\r\n  const [newDepartment, setNewDepartment] = useState('');\r\n  const [showAlert, setShowAlert] = React.useState(false);\r\n  const [alertMess, setAlertMess] = React.useState('');\r\n  const [alertColor, setAlertColor] = React.useState('');\r\n\r\n  useEffect(() => {\r\n    fetchAllDepartmentListData();\r\n\r\n    return () => {\r\n      setDepartment({});\r\n      setDepartmentList([]);\r\n    };\r\n  }, []);\r\n\r\n  const fetchAllDepartmentListData = async () => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/employee/department');\r\n      setDepartmentList(data);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  function isDepartmentComplete() {\r\n    return department.departmentName;\r\n  }\r\n\r\n  const submitDepartment = () => {\r\n    const departmentObj = {\r\n      departmentName: department.departmentName\r\n    };\r\n    saveDepartment(departmentObj);\r\n  };\r\n\r\n  const saveDepartment = async (payload) => {\r\n    try {\r\n      const data = await postRequest(process.env.REACT_APP_API_URL + '/employee/department', payload);\r\n      setAlertMess('Department ' + data.departmentName + ' created successfully');\r\n      setAlertColor('success');\r\n      setShowAlert(true);\r\n      setDepartment({});\r\n      fetchAllDepartmentListData();\r\n      console.log(data);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      setAlertMess(err.message);\r\n      setAlertColor('info');\r\n      setShowAlert(true);\r\n    }\r\n  };\r\n\r\n  const handleDepartmentChange = (event) => {\r\n    const updatedData = { ...department, departmentName: event.target.value };\r\n    setDepartment(updatedData);\r\n  };\r\n\r\n  const handleRowDelete = async (rowIndex) => {\r\n    try {\r\n      const data = await deleteRequest(process.env.REACT_APP_API_URL + '/employee/department/' + rowIndex);\r\n      setAlertMess('Department ' + data.category + ' deleted successfully');\r\n      setAlertColor('success');\r\n      setShowAlert(true);\r\n      fetchAllDepartmentListData();\r\n    } catch (err) {\r\n      setAlertMess(err.message);\r\n      setAlertColor('info');\r\n      setShowAlert(true);\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (oldValue, newValue, index, column) => {\r\n    const newRows = [...departmentList];\r\n    newRows[index][column] = newValue;\r\n    setDepartmentList(newRows);\r\n    setOldDepartment(oldValue);\r\n    setNewDepartment(newValue);\r\n  };\r\n\r\n  const updateDepartment = async () => {\r\n    try {\r\n      const data = await putRequestNotStringify(\r\n        process.env.REACT_APP_API_URL + '/employee/department/' + oldDepartment + '/' + newDepartment,\r\n        {}\r\n      );\r\n      setAlertMess('Department ' + data.category + ' updated successfully');\r\n      setAlertColor('success');\r\n      setShowAlert(true);\r\n      setOldDepartment('');\r\n      setNewDepartment('');\r\n      fetchAllDepartmentListData();\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      setAlertMess(err.message);\r\n      setAlertColor('info');\r\n      setShowAlert(true);\r\n      setOldDepartment('');\r\n      setNewDepartment('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MainCard title=\"Department Details\">\r\n        <Grid container direction=\"row\" spacing={gridSpacing}>\r\n          <Grid item xs={4}>\r\n            <br></br>\r\n            <TextField\r\n              label=\"Department Name\"\r\n              required\r\n              variant=\"outlined\"\r\n              value={department.departmentName || ''}\r\n              onChange={handleDepartmentChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <br></br>\r\n            <div className=\"content\">\r\n              {isDepartmentComplete() && (\r\n                <Button variant=\"contained\" color=\"error\" onClick={() => submitDepartment()}>\r\n                  Create New Department\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Grid item xs={12}>\r\n              <div style={{ overflowX: 'auto' }}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Department</TableCell>\r\n                      <TableCell>Department Count</TableCell>\r\n                      <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {departmentList.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        {/* <TableCell>{row?.category}</TableCell> */}\r\n                        <TableCell>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            value={row?.departmentName || ''}\r\n                            onChange={(e) => handleInputChange(row.departmentName, e.target.value, index, 'departmentName')}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>{row?.laborCount}</TableCell>\r\n                        <TableCell>\r\n                          {/* <Button variant=\"contained\" color=\"error\" onClick={() => handleRowDelete(row.id)}>\r\n                            Delete\r\n                          </Button>\r\n                          <Button variant=\"contained\" color=\"error\" onClick={() => updateLaborCategory()}>\r\n                            Update\r\n                          </Button> */}\r\n                          <Tooltip arrow placement=\"right\" title=\"Update\">\r\n                            <IconButton\r\n                              onClick={() => {\r\n                                updateDepartment();\r\n                              }}\r\n                            >\r\n                              <Edit />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip arrow placement=\"right\" title=\"Delete\">\r\n                            <IconButton\r\n                              onClick={() => {\r\n                                handleRowDelete(row.id);\r\n                              }}\r\n                            >\r\n                              <Delete />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </MainCard>\r\n      {showAlert && <AlertDialog showAlert={showAlert} setShowAlert={setShowAlert} alertColor={alertColor} alertMess={alertMess} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Department;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');"],"names":["department","setDepartment","useState","departmentList","setDepartmentList","oldDepartment","setOldDepartment","newDepartment","setNewDepartment","showAlert","setShowAlert","React","alertMess","setAlertMess","alertColor","setAlertColor","useEffect","fetchAllDepartmentListData","async","data","getRequest","err","console","error","message","saveDepartment","postRequest","payload","departmentName","log","_jsxs","children","_jsx","MainCard","title","Grid","container","direction","spacing","gridSpacing","item","xs","TextField","label","required","variant","value","onChange","event","updatedData","target","className","Button","color","onClick","submitDepartment","departmentObj","style","overflowX","Table","TableHead","TableRow","TableCell","TableBody","map","row","index","e","handleInputChange","oldValue","newValue","column","newRows","laborCount","Tooltip","arrow","placement","IconButton","putRequestNotStringify","category","updateDepartment","Edit","deleteRequest","rowIndex","handleRowDelete","id","Delete","AlertDialog","createSvgIcon","d"],"sourceRoot":""}