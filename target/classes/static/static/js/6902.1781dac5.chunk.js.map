{"version":3,"file":"static/js/6902.1781dac5.chunk.js","mappings":"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","sources":["views/invoice/AllInvoice.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/FactCheck.js","../node_modules/@mui/icons-material/esm/Receipt.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport { createTheme, ThemeProvider, useTheme, Tooltip, IconButton, Box } from '@mui/material';\r\nimport { Edit, FactCheck, Receipt as ReceiptIcon } from '@mui/icons-material';\r\nimport { lazy } from 'react';\r\nimport AlertDialog from 'views/utilities/AlertDialog';\r\n\r\n// project imports\r\nimport Loadable from 'ui-component/Loadable';\r\nimport { getRequest } from 'utils/fetchRequest';\r\nconst BillPayment = Loadable(lazy(() => import('views/invoice/BillPayment')));\r\nconst MultiSettle = Loadable(lazy(() => import('views/invoice/MultiSettle')));\r\nconst Receipt = Loadable(lazy(() => import('views/invoice/Receipt')));\r\n\r\nconst AllInvoice = () => {\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertMess, setAlertMess] = useState('');\r\n  const [alertColor, setAlertColor] = useState('info');\r\n\r\n  const [data, setData] = useState([]);\r\n  const [invoice, setInvoice] = useState();\r\n  const [invoiceCreateOpen, setInvoiceCreateOpen] = useState(false);\r\n\r\n  const [rowSelection, setRowSelection] = useState({});\r\n  const selectedRows = useMemo(() => Object.keys(rowSelection).map((key) => data[key]), [rowSelection, data]);\r\n\r\n  const [settleBillDialogOpen, setSettleBillDialogOpen] = useState(false);\r\n  const [paymentModes, setPaymentModes] = useState([]);\r\n\r\n  const [receipt, setReceipt] = useState({});\r\n  const [receiptDialogOpen, setReceiptDialogOpen] = useState(false);\r\n  const roles = JSON.parse(localStorage.getItem('roles')) || [];\r\n  useEffect(() => {\r\n    fetchAllInvoiceData();\r\n    getPaymentModes();\r\n\r\n    return () => {\r\n      setData([]);\r\n      setPaymentModes([]);\r\n    };\r\n  }, []);\r\n\r\n  const fetchAllInvoiceData = async () => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/invoice');\r\n      setData(data);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const getPaymentModes = async () => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/config/paymentmodes');\r\n      setPaymentModes(data);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setInvoiceCreateOpen(false);\r\n    setInvoice({});\r\n    setSettleBillDialogOpen(false);\r\n    setReceiptDialogOpen(false);\r\n    fetchAllInvoiceData();\r\n  };\r\n\r\n  //should be memoized or stable\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        accessorKey: 'invoiceId', //access nested data with dot notation\r\n        header: 'Id',\r\n        size: 50\r\n        //filterVariant: 'multi-select'\r\n      },\r\n      {\r\n        accessorKey: 'jobId', //normal accessorKey\r\n        header: 'JobCard No.',\r\n        size: 50\r\n      },\r\n      {\r\n        accessorKey: 'grandTotal',\r\n        header: 'Bill Amt',\r\n        size: 50\r\n      },\r\n      {\r\n        accessorKey: 'pendingAmount',\r\n        header: 'Pending',\r\n        size: 50\r\n      },\r\n      {\r\n        accessorKey: 'ownerName', //access nested data with dot notation\r\n        header: 'Owner',\r\n        size: 50\r\n      },\r\n      {\r\n        accessorKey: 'vehicleName',\r\n        header: 'Vehicle',\r\n        size: 50\r\n      },\r\n      {\r\n        accessorKey: 'vehicleRegNo',\r\n        header: 'Reg. No.',\r\n        size: 50\r\n      },\r\n      {\r\n        accessorKey: 'ownerPhoneNumber', //normal accessorKey\r\n        header: 'Phone',\r\n        size: 100\r\n      },\r\n      {\r\n        accessorKey: 'billCloseDate',\r\n        header: 'Bill Close Date',\r\n        size: 100\r\n      },\r\n      {\r\n        accessorKey: 'creditFlag',\r\n        header: 'Credit ?',\r\n        size: 100,\r\n        filterVariant: 'multi-select',\r\n        Cell: ({ cell }) => (cell.getValue() ? 'Yes' : 'No')\r\n      },\r\n      {\r\n        accessorKey: 'creditSettledFlag',\r\n        header: 'Credit Settled ?',\r\n        size: 100,\r\n        filterVariant: 'multi-select',\r\n        Cell: ({ cell }) => (cell.getValue() ? 'Yes' : 'No')\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const globalTheme = useTheme();\r\n\r\n  const tableTheme = useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode: globalTheme.palette.mode, //let's use the same dark/light mode as the global theme\r\n          primary: globalTheme.palette.secondary, //swap in the secondary color as the primary for the table\r\n          info: {\r\n            main: 'rgb(255,122,0)' //add in a custom color for the toolbar alert background stuff\r\n          },\r\n          background: {\r\n            default: 'rgba(0, 0, 0, 0)' // set background color to fully transparent\r\n            // set background color to transparent\r\n            // globalTheme.palette.mode === \"light\"\r\n            //   ? \"rgb(254,255,244)\" //random light yellow color for the background in light mode\r\n            //   : \"#000\", //pure black table in dark mode for fun\r\n          }\r\n        },\r\n        typography: {\r\n          button: {\r\n            textTransform: 'none', //customize typography styles for all buttons in table by default\r\n            fontSize: '1.2rem'\r\n          }\r\n        },\r\n        components: {\r\n          MuiTooltip: {\r\n            styleOverrides: {\r\n              tooltip: {\r\n                fontSize: '1.1rem' //override to make tooltip font size larger\r\n              }\r\n            }\r\n          },\r\n          MuiSwitch: {\r\n            styleOverrides: {\r\n              thumb: {\r\n                color: 'pink' //change the color of the switch thumb in the columns show/hide menu to pink\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }),\r\n    [globalTheme]\r\n  );\r\n  const gradientAngle = 195;\r\n  let color1 = '#e2d7d5';\r\n  let color2 = '#cf8989';\r\n  if (roles.includes('INVOICE')) {\r\n    color1 = '#e2d7d5';\r\n    color2 = '#71acda';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showAlert && <AlertDialog showAlert={showAlert} setShowAlert={setShowAlert} alertColor={alertColor} alertMess={alertMess} />}\r\n\r\n      <ThemeProvider theme={tableTheme}>\r\n        <MaterialReactTable\r\n          columns={columns}\r\n          data={data}\r\n          enableFacetedValues\r\n          //editingMode=\"modal\"\r\n          enableEditing\r\n          enableRowSelection\r\n          onRowSelectionChange={setRowSelection}\r\n          state={{ rowSelection }}\r\n          muiTablePaperProps={{\r\n            elevation: 0,\r\n            sx: {\r\n              borderRadius: '0',\r\n              background: `linear-gradient(${gradientAngle}deg, ${color1}, ${color2})`\r\n            }\r\n          }}\r\n          renderRowActions={({ row }) => (\r\n            <Box sx={{ display: 'flex', gap: '1rem' }}>\r\n              <Tooltip arrow placement=\"right\" title=\"Invoice\">\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setInvoice(row.original);\r\n                    setInvoiceCreateOpen(true);\r\n                  }}\r\n                >\r\n                  <Edit />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Box>\r\n          )}\r\n          renderTopToolbarCustomActions={() =>\r\n            Object.keys(rowSelection).length > 0 && (\r\n              <Box sx={{ display: 'flex', gap: 2 }}>\r\n                <Tooltip title=\"Settle Bill\">\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      const hasZeroPendingAmount = selectedRows.some((row) => row.pendingAmount === 0);\r\n\r\n                      if (hasZeroPendingAmount) {\r\n                        alert('One or more rows have a pending amount of 0.');\r\n                        return;\r\n                      }\r\n                      setSettleBillDialogOpen(true);\r\n                    }}\r\n                  >\r\n                    <FactCheck />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Receipt\">\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      setReceipt((prevState) => ({\r\n                        ...prevState,\r\n                        amount: selectedRows.reduce((sum, row) => sum + (row.grandTotal || 0), 0),\r\n                        invoiceIdList: selectedRows.map((row) => row.invoiceId),\r\n                        ownerName: selectedRows[0].ownerName\r\n                      }));\r\n\r\n                      setReceiptDialogOpen(true);\r\n                    }}\r\n                  >\r\n                    <ReceiptIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Box>\r\n            )\r\n          }\r\n        />\r\n      </ThemeProvider>\r\n      {invoiceCreateOpen && (\r\n        <BillPayment\r\n          invoice={invoice}\r\n          setInvoice={setInvoice}\r\n          paymentModes={paymentModes}\r\n          invoiceCreateOpen={invoiceCreateOpen}\r\n          handleClose={handleClose}\r\n          setAlertMess={setAlertMess}\r\n          setShowAlert={setShowAlert}\r\n          setAlertColor={setAlertColor}\r\n        />\r\n      )}\r\n      {settleBillDialogOpen && (\r\n        <MultiSettle\r\n          paymentModes={paymentModes}\r\n          settleBillDialogOpen={settleBillDialogOpen}\r\n          selectedRows={selectedRows}\r\n          handleClose={handleClose}\r\n          setAlertMess={setAlertMess}\r\n          setShowAlert={setShowAlert}\r\n        />\r\n      )}\r\n      {receiptDialogOpen && (\r\n        <Receipt\r\n          receipt={receipt}\r\n          setReceipt={setReceipt}\r\n          paymentModes={paymentModes}\r\n          receiptDialogOpen={receiptDialogOpen}\r\n          selectedRows={selectedRows}\r\n          handleClose={handleClose}\r\n          setAlertMess={setAlertMess}\r\n          setShowAlert={setShowAlert}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllInvoice;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M20 3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM10 17H5v-2h5v2zm0-4H5v-2h5v2zm0-4H5V7h5v2zm4.82 6L12 12.16l1.41-1.41 1.41 1.42L17.99 9l1.42 1.42L14.82 15z\"\n}), 'FactCheck');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 17H6v-2h12v2zm0-4H6v-2h12v2zm0-4H6V7h12v2zM3 22l1.5-1.5L6 22l1.5-1.5L9 22l1.5-1.5L12 22l1.5-1.5L15 22l1.5-1.5L18 22l1.5-1.5L21 22V2l-1.5 1.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2 4.5 3.5 3 2v20z\"\n}), 'Receipt');"],"names":["BillPayment","Loadable","lazy","MultiSettle","Receipt","AllInvoice","showAlert","setShowAlert","useState","alertMess","setAlertMess","alertColor","setAlertColor","data","setData","invoice","setInvoice","invoiceCreateOpen","setInvoiceCreateOpen","rowSelection","setRowSelection","selectedRows","useMemo","Object","keys","map","key","settleBillDialogOpen","setSettleBillDialogOpen","paymentModes","setPaymentModes","receipt","setReceipt","receiptDialogOpen","setReceiptDialogOpen","roles","JSON","parse","localStorage","getItem","useEffect","fetchAllInvoiceData","getPaymentModes","async","getRequest","err","console","error","message","log","handleClose","columns","accessorKey","header","size","filterVariant","Cell","_ref","cell","getValue","_ref2","globalTheme","useTheme","tableTheme","createTheme","palette","mode","primary","secondary","info","main","background","default","typography","button","textTransform","fontSize","components","MuiTooltip","styleOverrides","tooltip","MuiSwitch","thumb","color","color1","color2","includes","_jsxs","_Fragment","children","_jsx","AlertDialog","ThemeProvider","theme","MaterialReactTable","enableFacetedValues","enableEditing","enableRowSelection","onRowSelectionChange","state","muiTablePaperProps","elevation","sx","borderRadius","renderRowActions","_ref3","row","Box","display","gap","Tooltip","arrow","placement","title","IconButton","onClick","original","Edit","renderTopToolbarCustomActions","length","some","pendingAmount","alert","FactCheck","prevState","amount","reduce","sum","grandTotal","invoiceIdList","invoiceId","ownerName","ReceiptIcon","createSvgIcon","d","fillRule"],"sourceRoot":""}