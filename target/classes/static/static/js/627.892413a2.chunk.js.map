{"version":3,"file":"static/js/627.892413a2.chunk.js","mappings":"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","sources":["views/job/JobView.js"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Button,\r\n  createTheme,\r\n  ThemeProvider,\r\n  useTheme,\r\n  //IconButton,\r\n  Tooltip\r\n} from '@mui/material';\r\n//import DownloadIcon from '@mui/icons-material/Download';\r\nimport { MaterialReactTable } from 'material-react-table';\r\n\r\nimport AlertDialog from 'views/utilities/AlertDialog';\r\nimport PropTypes from 'prop-types';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { getRequest, getBlobRequest } from 'utils/fetchRequest';\r\n\r\nfunction JobView({ open, onClose, job }) {\r\n  const [jobSpares, setJobSpares] = React.useState({});\r\n  const [showAlert, setShowAlert] = React.useState(false);\r\n  const [alertMess, setAlertMess] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    getJobSpares(job.id);\r\n    return () => {\r\n      setJobSpares({});\r\n    };\r\n  }, [job]);\r\n\r\n  const getJobSpares = async (id) => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/jobCard/jobSpares/' + id);\r\n      setJobSpares(data);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  // const downloadJobCardPDF = async () => {\r\n  //   try {\r\n  //     const blob = await getBlobRequest(process.env.REACT_APP_API_URL + '/jobCard/pdf/' + job.id);\r\n  //     const downloadUrl = window.URL.createObjectURL(blob);\r\n  //     const link = document.createElement('a');\r\n  //     link.href = downloadUrl;\r\n  //     link.setAttribute('download', 'Job_' + job.jobId + '_' + job.vehicleRegNo + '.pdf'); // Use the filename you wish\r\n  //     //link.setAttribute('download', response.headers.get('Content-Disposition').split('filename=')[1] || 'download.pdf');\r\n  //     document.body.appendChild(link);\r\n  //     link.click();\r\n  //     link.parentNode.removeChild(link);\r\n  //   } catch (err) {\r\n  //     console.log(err.message);\r\n  //     onClose();\r\n  //     console.log(err.message);\r\n  //     setAlertMess(err.message);\r\n  //     setShowAlert(true);\r\n  //   }\r\n  // };\r\n\r\n  const printBillPDF = async () => {\r\n    try {\r\n      const blob = await getBlobRequest(process.env.REACT_APP_API_URL + '/jobCard/billPdf/' + job.id);\r\n      const downloadUrl = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = downloadUrl;\r\n      link.setAttribute('download', 'Bill_' + job.jobId + '_' + job.vehicleRegNo + '.pdf'); // Use the filename you wish\r\n      //link.setAttribute('download', response.headers.get('Content-Disposition').split('filename=')[1] || 'download.pdf');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.parentNode.removeChild(link);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setAlertMess(err.message);\r\n      setShowAlert(true);\r\n    }\r\n  };\r\n\r\n  const jobSparesColumn = React.useMemo(\r\n    () => [\r\n      {\r\n        accessorKey: 'sparesAndLabour',\r\n        header: 'Spares/Services',\r\n        size: 250\r\n      },\r\n      {\r\n        accessorKey: 'qty',\r\n        header: 'Quantity',\r\n        size: 100\r\n      },\r\n      {\r\n        accessorKey: 'rate',\r\n        header: 'Rate',\r\n        size: 100\r\n      },\r\n      {\r\n        accessorKey: 'amount',\r\n        header: 'Amount',\r\n        size: 100\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const globalTheme = useTheme();\r\n  const tableTheme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode: globalTheme.palette.mode, //let's use the same dark/light mode as the global theme\r\n          primary: globalTheme.palette.secondary, //swap in the secondary color as the primary for the table\r\n          info: {\r\n            main: 'rgb(255,122,0)' //add in a custom color for the toolbar alert background stuff\r\n          },\r\n          background: {\r\n            default: 'rgba(0, 0, 0, 0)' // set background color to fully transparent\r\n            // set background color to transparent\r\n            // globalTheme.palette.mode === \"light\"\r\n            //   ? \"rgb(254,255,244)\" //random light yellow color for the background in light mode\r\n            //   : \"#000\", //pure black table in dark mode for fun\r\n          }\r\n        },\r\n        typography: {\r\n          button: {\r\n            textTransform: 'none', //customize typography styles for all buttons in table by default\r\n            fontSize: '1.2rem'\r\n          }\r\n        },\r\n        components: {\r\n          MuiTooltip: {\r\n            styleOverrides: {\r\n              tooltip: {\r\n                fontSize: '1.1rem' //override to make tooltip font size larger\r\n              }\r\n            }\r\n          },\r\n          MuiSwitch: {\r\n            styleOverrides: {\r\n              thumb: {\r\n                color: 'pink' //change the color of the switch thumb in the columns show/hide menu to pink\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }),\r\n    [globalTheme]\r\n  );\r\n  const gradientAngle = 195;\r\n  const color1 = '#faf4f3';\r\n  const color2 = '#f2f0f6';\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={onClose} aria-labelledby=\"data-row-dialog-title\" fullWidth maxWidth=\"lg\">\r\n        <DialogTitle id=\"data-row-dialog-title\">\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%' }}>\r\n            <Typography variant=\"h4\">{'JobCard: ' + job.jobId + ' VehicleNo.: ' + job.vehicleRegNo}</Typography>\r\n            {/* <Tooltip title=\"Download Jobcard\">\r\n              <Button onClick={downloadJobCardPDF}>Print Jobcard</Button>\r\n            </Tooltip> */}\r\n            <Tooltip title=\"Print Bill\">\r\n              {/* <IconButton onClick={printBillPDF} color=\"primary\">\r\n              <DownloadIcon />\r\n            </IconButton> */}\r\n              <Button onClick={printBillPDF}>Print Bill</Button>\r\n            </Tooltip>\r\n          </div>\r\n        </DialogTitle>\r\n\r\n        <DialogContent dividers style={{ backgroundColor: 'white', color: 'black' }}>\r\n          {' '}\r\n          <Grid container direction=\"row\" spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n              <Grid container direction=\"row\" spacing={gridSpacing}>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    label=\"Owner Name\"\r\n                    variant=\"outlined\"\r\n                    value={job.ownerName || ''}\r\n                    InputProps={{\r\n                      readOnly: true\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    label=\"Owner PhoneNumber\"\r\n                    variant=\"outlined\"\r\n                    value={job.ownerPhoneNumber || ''}\r\n                    InputProps={{\r\n                      readOnly: true\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <TextField\r\n                    label=\"Owner Address\"\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                    value={job.ownerAddress || ''}\r\n                    InputProps={{\r\n                      readOnly: true\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Divider />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container direction=\"row\" spacing={gridSpacing}>\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    label=\"Vehicle Reg. No.\"\r\n                    variant=\"outlined\"\r\n                    value={job.vehicleRegNo || ''}\r\n                    InputProps={{\r\n                      readOnly: true\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    label=\"Vehicle Name\"\r\n                    variant=\"outlined\"\r\n                    value={job.vehicleName || ''}\r\n                    InputProps={{\r\n                      readOnly: true\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    label=\"Vehicle K.Ms\"\r\n                    variant=\"outlined\"\r\n                    value={job.kiloMeters || ''}\r\n                    InputProps={{\r\n                      readOnly: true\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Divider />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Divider />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <ThemeProvider theme={tableTheme}>\r\n                <MaterialReactTable\r\n                  columns={jobSparesColumn}\r\n                  data={jobSpares.jobSparesInfo || []}\r\n                  muiTablePaperProps={{\r\n                    elevation: 0,\r\n                    sx: {\r\n                      borderRadius: '0',\r\n                      background: `linear-gradient(${gradientAngle}deg, ${color1}, ${color2})`\r\n                    }\r\n                  }}\r\n                />\r\n              </ThemeProvider>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Divider />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Divider />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <ThemeProvider theme={tableTheme}>\r\n                <MaterialReactTable\r\n                  columns={jobSparesColumn}\r\n                  data={jobSpares.jobServiceInfo || []}\r\n                  muiTablePaperProps={{\r\n                    elevation: 0,\r\n                    sx: {\r\n                      borderRadius: '0',\r\n                      background: `linear-gradient(${gradientAngle}deg, ${color1}, ${color2})`\r\n                    }\r\n                  }}\r\n                />\r\n              </ThemeProvider>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Divider />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Divider />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container direction=\"row\" spacing={gridSpacing}>\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    label=\"Total Spares Value\"\r\n                    variant=\"outlined\"\r\n                    value={jobSpares.totalSparesValue || ''}\r\n                    InputProps={{\r\n                      readOnly: true\r\n                    }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    label=\"Total Service Value\"\r\n                    variant=\"outlined\"\r\n                    value={jobSpares.totalServiceValue || ''}\r\n                    InputProps={{\r\n                      readOnly: true\r\n                    }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    label=\"Grand Total\"\r\n                    variant=\"outlined\"\r\n                    value={jobSpares.grandTotal || ''}\r\n                    InputProps={{\r\n                      readOnly: true\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {showAlert && <AlertDialog showAlert={showAlert} setShowAlert={setShowAlert} alertColor={'info'} alertMess={alertMess} />}\r\n    </>\r\n  );\r\n}\r\n\r\nJobView.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  job: PropTypes.object.isRequired\r\n};\r\n\r\nexport default JobView;\r\n"],"names":["_ref","open","onClose","job","jobSpares","setJobSpares","React","showAlert","setShowAlert","alertMess","setAlertMess","getJobSpares","id","async","data","getRequest","err","console","log","message","jobSparesColumn","accessorKey","header","size","globalTheme","useTheme","tableTheme","createTheme","palette","mode","primary","secondary","info","main","background","default","typography","button","textTransform","fontSize","components","MuiTooltip","styleOverrides","tooltip","MuiSwitch","thumb","color","color1","color2","_jsxs","_Fragment","children","Dialog","fullWidth","maxWidth","_jsx","DialogTitle","style","display","justifyContent","alignItems","width","Typography","variant","jobId","vehicleRegNo","Tooltip","title","Button","onClick","blob","getBlobRequest","downloadUrl","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","DialogContent","dividers","backgroundColor","Grid","container","direction","spacing","gridSpacing","item","xs","TextField","label","value","ownerName","InputProps","readOnly","ownerPhoneNumber","margin","multiline","ownerAddress","Divider","vehicleName","kiloMeters","ThemeProvider","theme","MaterialReactTable","columns","jobSparesInfo","muiTablePaperProps","elevation","sx","borderRadius","jobServiceInfo","totalSparesValue","totalServiceValue","grandTotal","DialogActions","AlertDialog","alertColor"],"sourceRoot":""}