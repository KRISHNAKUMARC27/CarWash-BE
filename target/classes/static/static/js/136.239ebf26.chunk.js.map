{"version":3,"file":"static/js/136.239ebf26.chunk.js","mappings":"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","sources":["views/service/ServiceCreate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { TextField, InputLabel, Select, MenuItem, Grid, Button } from '@mui/material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nimport AlertDialog from 'views/utilities/AlertDialog';\r\nimport { getRequest, postRequest } from 'utils/fetchRequest';\r\n\r\nfunction ServiceCreate({ data, setServiceUpdateOpen, fetchAllServiceData }) {\r\n  const [serviceDetails, setServiceDetails] = useState(data || {});\r\n  const [serviceCategoryList, setServiceCategoryList] = useState([]);\r\n  const [showAlert, setShowAlert] = React.useState(false);\r\n  const [alertMess, setAlertMess] = React.useState('');\r\n  const [alertColor, setAlertColor] = React.useState('');\r\n\r\n  useEffect(() => {\r\n    fetchAllServiceCategoryListData();\r\n\r\n    return () => {\r\n      setServiceDetails({});\r\n      setServiceCategoryList([]);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setServiceDetails(data || {});\r\n  }, [data]);\r\n\r\n  const fetchAllServiceCategoryListData = async () => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/service/serviceCategory');\r\n      setServiceCategoryList(data);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  function isServiceComplete() {\r\n    return serviceDetails.category && serviceDetails.desc && serviceDetails.amount && serviceDetails.cgst && serviceDetails.sgst;\r\n  }\r\n\r\n  const saveServiceInventory = async (payload) => {\r\n    try {\r\n      const data = await postRequest(process.env.REACT_APP_API_URL + '/service', payload);\r\n      if (fetchAllServiceData) {\r\n        fetchAllServiceData();\r\n      }\r\n      if (setServiceUpdateOpen) {\r\n        setServiceUpdateOpen(false);\r\n      }\r\n      setAlertMess(data.desc + ' added successfully ');\r\n      setAlertColor('success');\r\n      setShowAlert(true);\r\n      console.log(data);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setAlertMess(err.message);\r\n      setAlertColor('info');\r\n      setShowAlert(true);\r\n    }\r\n  };\r\n\r\n  const handleCategoryChange = (event) => {\r\n    const updatedData = { ...serviceDetails, category: event.target.value };\r\n    setServiceDetails(updatedData);\r\n  };\r\n  const handleDescChange = (event) => {\r\n    const updatedData = { ...serviceDetails, desc: event.target.value };\r\n    setServiceDetails(updatedData);\r\n  };\r\n  const handleAmountChange = (event) => {\r\n    const updatedData = { ...serviceDetails, amount: event.target.value };\r\n    setServiceDetails(updatedData);\r\n  };\r\n  const handleCGSTChange = (event) => {\r\n    const updatedData = { ...serviceDetails, cgst: event.target.value };\r\n    setServiceDetails(updatedData);\r\n  };\r\n  const handleSGSTChange = (event) => {\r\n    const updatedData = { ...serviceDetails, sgst: event.target.value };\r\n    setServiceDetails(updatedData);\r\n  };\r\n  const handleHsnCodeChange = (event) => {\r\n    const updatedData = { ...serviceDetails, hsnCode: event.target.value };\r\n    setServiceDetails(updatedData);\r\n  };\r\n  const handleMisc2Change = (event) => {\r\n    const updatedData = { ...serviceDetails, misc2: event.target.value };\r\n    setServiceDetails(updatedData);\r\n  };\r\n  const handleMisc3Change = (event) => {\r\n    const updatedData = { ...serviceDetails, misc3: event.target.value };\r\n    setServiceDetails(updatedData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MainCard title=\"Enter Service Details\">\r\n        <Grid container direction=\"row\" spacing={gridSpacing}>\r\n          <Grid item xs={3}>\r\n            <InputLabel id=\"demo-select-small\" required>\r\n              Category Type\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-select-small\"\r\n              id=\"demo-select-small\"\r\n              value={serviceDetails.category || ''}\r\n              label=\"Category Type\"\r\n              onChange={handleCategoryChange}\r\n            >\r\n              {serviceCategoryList.map((option) => (\r\n                <MenuItem key={option.id} value={option.category}>\r\n                  {option.category}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <br></br>\r\n            <TextField\r\n              label=\"Service Description\"\r\n              required\r\n              variant=\"standard\"\r\n              fullWidth\r\n              value={serviceDetails.desc || ''}\r\n              onChange={handleDescChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField label=\"Amount\" required variant=\"outlined\" value={serviceDetails.amount || ''} onChange={handleAmountChange} />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField label=\"CGST\" required variant=\"outlined\" value={serviceDetails.cgst || ''} onChange={handleCGSTChange} />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField label=\"SGST\" required variant=\"outlined\" value={serviceDetails.sgst || ''} onChange={handleSGSTChange} />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField label=\"HSN Code\" variant=\"outlined\" value={serviceDetails.hsnCode || ''} onChange={handleHsnCodeChange} />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField label=\"Misc2\" variant=\"outlined\" value={serviceDetails.misc2 || ''} onChange={handleMisc2Change} />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField label=\"Misc3\" variant=\"outlined\" value={serviceDetails.misc3 || ''} onChange={handleMisc3Change} />\r\n          </Grid>\r\n        </Grid>\r\n      </MainCard>\r\n      <br></br>\r\n      <div className=\"content\">\r\n        {isServiceComplete() && (\r\n          <Button variant=\"contained\" color=\"error\" onClick={() => saveServiceInventory(serviceDetails)}>\r\n            Add/Update Service\r\n          </Button>\r\n        )}\r\n      </div>\r\n      {showAlert && <AlertDialog showAlert={showAlert} setShowAlert={setShowAlert} alertColor={alertColor} alertMess={alertMess} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nServiceCreate.propTypes = {\r\n  data: PropTypes.object,\r\n  setServiceUpdateOpen: PropTypes.func,\r\n  fetchAllServiceData: PropTypes.func\r\n};\r\nexport default ServiceCreate;\r\n"],"names":["_ref","data","setServiceUpdateOpen","fetchAllServiceData","serviceDetails","setServiceDetails","useState","serviceCategoryList","setServiceCategoryList","showAlert","setShowAlert","React","alertMess","setAlertMess","alertColor","setAlertColor","useEffect","fetchAllServiceCategoryListData","async","getRequest","err","console","error","message","_jsxs","children","_jsx","MainCard","title","Grid","container","direction","spacing","gridSpacing","item","xs","InputLabel","id","required","Select","labelId","value","category","label","onChange","event","updatedData","target","map","option","MenuItem","TextField","variant","fullWidth","desc","amount","cgst","sgst","hsnCode","misc2","misc3","className","Button","color","onClick","postRequest","payload","log","saveServiceInventory","AlertDialog"],"sourceRoot":""}