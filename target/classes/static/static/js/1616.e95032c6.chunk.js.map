{"version":3,"file":"static/js/1616.e95032c6.chunk.js","mappings":"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","sources":["views/appointment/AppointmentCreate.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/dom-helpers/esm/removeClass.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { TextField, InputLabel, Select, MenuItem, Grid, Button, Autocomplete } from '@mui/material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { getRequest, postRequest } from 'utils/fetchRequest';\r\nimport dayjs from 'dayjs';\r\nimport AlertDialog from 'views/utilities/AlertDialog';\r\n\r\nfunction AppointmentCreate({ data, setAppointmentUpdateOpen, fetchAllAppointmentData }) {\r\n  const initialAppointment = data\r\n    ? {\r\n        ...data,\r\n        appointmentDateTime: data.appointmentDateTime ? dayjs(data.appointmentDateTime) : null\r\n      }\r\n    : {};\r\n  const [appointment, setAppointment] = useState(initialAppointment);\r\n  const [serviceList, setServiceList] = useState([]);\r\n  const [employeeList, setEmployeeList] = useState([]);\r\n  const [showAlert, setShowAlert] = React.useState(false);\r\n  const [alertMess, setAlertMess] = React.useState('');\r\n  const [alertColor, setAlertColor] = React.useState('');\r\n\r\n  useEffect(() => {\r\n    fetchAllServiceListData();\r\n    fetchAllEmployeeData();\r\n    return () => {\r\n      setAppointment({});\r\n      setServiceList([]);\r\n      setEmployeeList([]);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n    if (data) {\r\n      setAppointment({\r\n        ...data,\r\n        appointmentDateTime: data.appointmentDateTime ? dayjs(data.appointmentDateTime) : null\r\n      });\r\n    } else {\r\n      setAppointment({});\r\n    }\r\n  }, [data]);\r\n\r\n  const fetchAllServiceListData = async () => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/service');\r\n      setServiceList(data);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  const fetchAllEmployeeData = async () => {\r\n    try {\r\n      const data = await getRequest(process.env.REACT_APP_API_URL + '/employee');\r\n      setEmployeeList(data);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  function isAppointmentComplete() {\r\n    return appointment.customerName && appointment.phone && appointment.service && appointment.appointmentDateTime;\r\n  }\r\n\r\n  const saveAppointment = async (payload) => {\r\n    try {\r\n      const data = await postRequest(process.env.REACT_APP_API_URL + '/appointments', payload);\r\n      if (fetchAllAppointmentData) {\r\n        fetchAllAppointmentData();\r\n      }\r\n      if (setAppointmentUpdateOpen) {\r\n        setAppointmentUpdateOpen(false);\r\n      }\r\n      setAlertMess('Created appointment for ' + data.customerName);\r\n      setAlertColor('success');\r\n      setShowAlert(true);\r\n      console.log(data);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setAlertMess(err.message);\r\n      setAlertColor('info');\r\n      setShowAlert(true);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    const updatedData = { ...appointment, [field]: value };\r\n    setAppointment(updatedData);\r\n  };\r\n\r\n  const handleDateTimeChange = (dateTime) => {\r\n    setAppointment({ ...appointment, appointmentDateTime: dateTime.format('YYYY-MM-DDTHH:mm:ss') });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MainCard title=\"Enter Appointment Details\">\r\n        <Grid container direction=\"row\" spacing={gridSpacing}>\r\n          <Grid item xs={4}>\r\n            <br></br>\r\n            <TextField\r\n              label=\"Customer Name\"\r\n              required\r\n              variant=\"standard\"\r\n              value={appointment.customerName || ''}\r\n              onChange={(e) => handleInputChange('customerName', e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              label=\"Phone\"\r\n              required\r\n              variant=\"outlined\"\r\n              value={appointment.phone || ''}\r\n              onChange={(e) => handleInputChange('phone', e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Autocomplete\r\n              options={serviceList}\r\n              getOptionLabel={(option) => option.desc}\r\n              value={serviceList.find((option) => option.desc === appointment.service) || null} // Set initial value\r\n              onChange={(event, newValue) => {\r\n                handleInputChange('service', newValue ? newValue.desc : ''); // Store `desc` in state\r\n              }}\r\n              renderInput={(params) => <TextField {...params} label=\"Select Service\" variant=\"outlined\" fullWidth />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <DateTimePicker\r\n              label=\"Appointment Date & Time\"\r\n              value={appointment.appointmentDateTime}\r\n              onChange={handleDateTimeChange}\r\n              renderInput={(params) => <TextField {...params} fullWidth />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel id=\"demo-select-small\">Staff</InputLabel>\r\n            <Select\r\n              labelId=\"demo-select-small\"\r\n              id=\"demo-select-small\"\r\n              value={appointment.staffName || ''}\r\n              label=\"Staff\"\r\n              onChange={(e) => handleInputChange('staffName', e.target.value)}\r\n            >\r\n              {employeeList.map((option) => (\r\n                <MenuItem key={option.id} value={option.name}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"Description\"\r\n              variant=\"standard\" // Optional: \"standard\" works, but \"outlined\" improves visibility\r\n              multiline\r\n              fullWidth\r\n              value={appointment.description || ''}\r\n              onChange={(e) => handleInputChange('description', e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </MainCard>\r\n      <br></br>\r\n      <div className=\"content\">\r\n        {isAppointmentComplete() && (\r\n          <Button variant=\"contained\" color=\"error\" onClick={() => saveAppointment(appointment)}>\r\n            Add/Update Appointment\r\n          </Button>\r\n        )}\r\n      </div>\r\n      {showAlert && <AlertDialog showAlert={showAlert} setShowAlert={setShowAlert} alertColor={alertColor} alertMess={alertMess} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nAppointmentCreate.propTypes = {\r\n  data: PropTypes.object,\r\n  setAppointmentUpdateOpen: PropTypes.func,\r\n  fetchAllAppointmentData: PropTypes.func\r\n};\r\nexport default AppointmentCreate;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}"],"names":["_ref","data","setAppointmentUpdateOpen","fetchAllAppointmentData","initialAppointment","appointmentDateTime","dayjs","appointment","setAppointment","useState","serviceList","setServiceList","employeeList","setEmployeeList","showAlert","setShowAlert","React","alertMess","setAlertMess","alertColor","setAlertColor","useEffect","fetchAllServiceListData","fetchAllEmployeeData","console","log","async","getRequest","err","message","error","handleInputChange","field","value","updatedData","_jsxs","children","_jsx","MainCard","title","Grid","container","direction","spacing","gridSpacing","item","xs","TextField","label","required","variant","customerName","onChange","e","target","phone","Autocomplete","options","getOptionLabel","option","desc","find","service","event","newValue","renderInput","params","fullWidth","DateTimePicker","dateTime","format","InputLabel","id","Select","labelId","staffName","map","MenuItem","name","multiline","description","className","Button","color","onClick","postRequest","payload","saveAppointment","AlertDialog","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","position","disablePointerEvents","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","vars","palette","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","inProps","ref","useThemeProps","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","size","classes","slots","composeClasses","useUtilityClasses","FormControlContext","as","clsx","Typography","createSvgIcon","d","addClass","element","classList","add","contains","baseVal","indexOf","hasClass","setAttribute","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","remove"],"sourceRoot":""}